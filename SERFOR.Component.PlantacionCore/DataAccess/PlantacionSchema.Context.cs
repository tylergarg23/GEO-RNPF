//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SERFOR.Component.PlantacionCore.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PlantacionSchema : DbContext
    {
        public PlantacionSchema()
            : base("name=PlantacionSchema")
        {
            AnexosPlantacionSet = Set<AnexosPlantacion>();
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SistemaCoordenada> SistemaCoordenadaSet { get; set; }
        public virtual DbSet<Persona> PersonaSet { get; set; }
        public virtual DbSet<Anexos> AnexosSet { get; set; }
        internal virtual DbSet<AnexosPlantacion> AnexosPlantacionSet { get; set; }
        public virtual DbSet<FinalidadProducto> FinalidadProductoSet { get; set; }
        public virtual DbSet<PersonaPlantacion> PersonaPlantacionSet { get; set; }
        public virtual DbSet<PersonaPlantacionHistorico> PersonaPlantacionHistoricoSet { get; set; }
        public virtual DbSet<Plantacion> PlantacionSet { get; set; }
        public virtual DbSet<PlantacionHistorico> PlantacionHistoricoSet { get; set; }
        public virtual DbSet<RevisionesRegistroPlantaciones> RevisionesRegistroPlantacionesSet { get; set; }
        public virtual DbSet<RevisionesRegistroPlantacionesHistorico> RevisionesRegistroPlantacionesHistoricoSet { get; set; }
        public virtual DbSet<TipoAutorizacion> TipoAutorizacionSet { get; set; }
        public virtual DbSet<TipoComunidad> TipoComunidadSet { get; set; }
        public virtual DbSet<TipoZona> TipoZonaSet { get; set; }
        public virtual DbSet<Ubigeo> UbigeoSet { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumento { get; set; }
        public virtual DbSet<Sinonimo> Sinonimo { get; set; }
        public virtual DbSet<Especie> Especie { get; set; }
        public virtual DbSet<FamiliaEspecie> FamiliaEspecie { get; set; }
        public virtual DbSet<PlantacionDetalle> PlantacionDetalle { get; set; }
        public virtual DbSet<PlantacionDetalleEspecie> PlantacionDetalleEspecie { get; set; }
        public virtual DbSet<PlantacionDetalleEspecieHistorico> PlantacionDetalleEspecieHistorico { get; set; }
        public virtual DbSet<PlantacionDetalleHistorico> PlantacionDetalleHistorico { get; set; }
        public virtual DbSet<PlantacionDetalleVertices> PlantacionDetalleVertices { get; set; }
        public virtual DbSet<PlantacionDetalleVerticesHistorico> PlantacionDetalleVerticesHistorico { get; set; }
        public virtual DbSet<UnidadMedida> UnidadMedida { get; set; }
        public virtual DbSet<TipoPlantacion> TipoPlantacion { get; set; }
        public virtual DbSet<SistemaPlantacion> SistemaPlantacion { get; set; }
        public virtual DbSet<AutoridadForestal> AutoridadForestal { get; set; }
        public virtual DbSet<SedeAutoridadForestal> SedeAutoridadForestal { get; set; }
        public virtual DbSet<Fact_Plantaciones> Fact_Plantaciones { get; set; }
        public virtual DbSet<Fact_PlantacionesEspacio> Fact_PlantacionesEspacio { get; set; }
        public virtual DbSet<Fact_PlantacionesProduccion> Fact_PlantacionesProduccion { get; set; }
    
        public virtual int sp_ReplicarRegistroPlantacion(Nullable<int> plantacion_Id, string usuario, ObjectParameter result)
        {
            var plantacion_IdParameter = plantacion_Id.HasValue ?
                new ObjectParameter("Plantacion_Id", plantacion_Id) :
                new ObjectParameter("Plantacion_Id", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ReplicarRegistroPlantacion", plantacion_IdParameter, usuarioParameter, result);
        }
    
        public virtual int sp_GeneraLocalKey(Nullable<int> plantacion_Id)
        {
            var plantacion_IdParameter = plantacion_Id.HasValue ?
                new ObjectParameter("Plantacion_Id", plantacion_Id) :
                new ObjectParameter("Plantacion_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GeneraLocalKey", plantacion_IdParameter);
        }
    }
}
