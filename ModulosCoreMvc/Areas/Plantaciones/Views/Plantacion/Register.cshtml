@using SERFOR.Component.DTEntities.Plantaciones
@using SERFOR.Component.Tools.CustomFormatProviders


@model PlantacionTableRowDTe

@{
    ViewBag.Title = "Register";
    Layout = "~/Areas/Plantaciones/Views/Shared/_Layout.cshtml";
}

<div class="container">

    @{ var noEditable = (ViewBag.RoleName != "ADMINPLNT" && ViewBag.RoleName != "ESPATFFS" && ViewBag.RoleName != "REGISTRADOR"); }

    <nav class="navbar navbar-default navbar-xs" role="navigation">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">
                @{
                    string iniTitle = string.Format("<b>Formato N° 01 </b> {0}", (Model.Id > 0) ?
                                        (!string.IsNullOrEmpty(Model.NumeroCertificado)) ?
                                        " Cód. " + Model.NumeroCertificado.ToUpper() + " (ID " + Model.Id + ")"
                                        : " En revisión - " + Model.Titular + " (ID " + Model.Id + ")"
                                        : " Nuevo Registro");
                }
                @Html.Raw(iniTitle)
            </a>
        </div>
        <!-- Collect the nav links, forms, and other content for toggling -->
        @if (ViewBag.RoleName == "ESPATFFS" || ViewBag.RoleName == "ESPFORDIR" || ViewBag.RoleName == "ESPCATAST")
        {
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav navbar-right">
                    <li><a href="#" onClick="modalRevisiones('@Model.Id')" data-toggle="tooltip" title="Lista de revisiones" data-placement="bottom"><i class="glyphicon glyphicon-eye-open"></i>-<span id="pillRevisiones" class="label label-pill label-info">@Model.CantidadRevisiones</span></a></li>
                    <li><a href="#" onClick="modalHistoricos('@Model.Id')" data-toggle="tooltip" title="Registros Formato N°03" data-placement="bottom"><i class="glyphicon glyphicon-save-file"></i>-<span id="pillFormatos3" class="label label-pill label-info">@Model.CantidadHistoricos</span></a></li>
                    @if (Model.NumeroCertificado != "")
                    {
                        <li>
                            <a href="@Url.Action("CertificatePrint", "Plantacion", new { area = "Plantaciones", plantacionId = Model.Id })"
                               type="submit"
                               id="verCertificado"
                               target="_blank"
                               data-toggle="tooltip" title="Generar Formato N°02" data-placement="right">
                                <i class="glyphicon glyphicon-print"></i>
                            </a>
                        </li>
                    }
                </ul>
            </div><!-- /.navbar-collapse -->
        }
    </nav>

    <div>
        <!-- Tabs -->
        <ul id="sectionTabs" class="nav nav-sections nav-tabs" role="tablist">
            <li role="presentation" id="li1" class="active"><a href="#personasTab" aria-controls="personasTab" role="tab" data-toggle="tab">Datos de las personas</a></li>
            <li role="presentation" id="li2"><a href="#areaTab" aria-controls="areaTab" role="tab" data-toggle="tab">Datos del área</a></li>
            <li role="presentation" id="li3">
                <a href="#detallesTab" aria-controls="detallesTab" role="tab" data-toggle="tab">
                    Detalles de la plantación&nbsp;
                    @if (Model.Detalles != null)
                    {<span id="badgeDetallesTab" class="badge">@Model.Detalles.Count()</span>}
                else
                { <span id="badgeDetallesTab" class="badge">0</span>}
                </a>
            </li>
            <li role="presentation" id="li4">
                <a href="#especiesTab" aria-controls="especiesTab" role="tab" data-toggle="tab">
                    Especies por bloque&nbsp;
                    @if (Model.Especies != null)
                    {<span id="badgeEspeciesTab" class="badge">@Model.Especies.Count()</span>}
                else
                { <span id="badgeEspeciesTab" class="badge">0</span>}
                </a>
            </li>
            <li role="presentation" id="li5">
                <a href="#requerimientosTab" aria-controls="requerimientosTab" role="tab" data-toggle="tab">
                    Documentos anexos&nbsp;
                    @if (Model.Anexos != null)
                    {<span id="badgeAnexosTab" class="badge">@Model.Anexos.Where(a => a.Id > 0).Count()</span> }
                else
                {<span id="badgeAnexosTab" class="badge">0</span>}
                </a>
            </li>
        </ul>

        <!-- Tab panels -->
        <div class="tab-content">
            <!-- Pestaña de Datos de las personas -->
            <div role="tabpanel" class="tab-pane fade in active" id="personasTab">
                <form id="formRegSection1" name="formRegSection1">
                    <input type="hidden" id="Section1Id" name="Section1Id" value="@Model.Id" />
                    <div class="row">
                        <div class="form-group col-md-6 col-xs-12">
                            <h3>Información del formato</h3>
                        </div>
                        <div class="form-group col-md-2 col-sm-4  col-xs-12">
                            <label class="control-label" for="fechamesa">Fecha de solicitud:</label>
                            <input id="fechamesa" name="FechaRecepcion" type="date" class="form-control" placeholder="Fecha de solicitud" value='@string.Format("{0:yyyy-MM-dd}", Model.FechaRecepcion)' required />
                        </div>
                        <div class="form-group col-md-2 col-sm-4  col-xs-12">
                            <label class="control-label" for="fechamesa">Recepcionado en ARFFS:</label>
                            <input id="fechamesaAR" name="FechaRecepcionARFFS" type="date" class="form-control" placeholder="Fecha de recepción" value='@string.Format("{0:yyyy-MM-dd}", Model.FechaRecepcionARFFS)' required />
                        </div>
                        <div class="form-group col-md-2 col-sm-4  col-xs-12">
                            <label class="control-label" for="fechareg">Registrado en el sistema:</label>
                            @{
                                var fechaIni = (Model.FechaCreacion != null && Model.FechaCreacion != DateTime.MinValue) ? Model.FechaCreacion : DateTime.Now;
                                <input id="fechareg" name="FechaRegistro" type="date" class="form-control" placeholder="Fecha de registro" value='@string.Format("{0:yyyy-MM-dd}", fechaIni)' readonly required />
                            }
                        </div>
                    </div>
                    <!-- Sección Titulares y representantes -->
                    <h3>Titulares y representates legales</h3>
                    <div class='hr'></div>
                    <div class="panel panel-success">
                        <div class="panel-heading">
                            <h3 class="panel-title"><span id="badgePersona" class="badge">@Model.Personas.Count</span> Personas registradas</h3>
                        </div>
                        <div class="panel-body">
                            @if (!noEditable)
                            {
                                <div class="row">
                                    <div class="form-group col-md-3 col-sm-3 col-xs-12">@*TYLER 12.12.19*@
                                        <div class="radio">
                                            <label>
                                                <input type="radio" name="rol" value="T" checked>
                                                <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                                Titular plantación
                                            </label>
                                        </div>
                                    </div>
                                    <div class="form-group col-md-3 col-sm-3 col-xs-12">@*TYLER 12.12.19*@
                                        <div class="radio">
                                            <label>
                                                <input type="radio" name="rol" value="R">
                                                <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                                Representante legal
                                            </label>
                                        </div>
                                    </div>
                                    @*<div class="form-group col-md-2 col-sm-3 col-xs-12"> //TYLER
                                        <div class="radio">
                                            <label>
                                                <input type="radio" name="rol" value="B">
                                                <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                                Brigadista
                                            </label>
                                        </div>
                                    </div>*@
                                    <div class="form-group col-md-2 col-sm-3 col-xs-12 col">
                                        <div class="radio">
                                            <label>
                                                <input type="radio" name="rol" value="P">
                                                <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                                Propietario predio
                                            </label>
                                        </div>
                                    </div>
                                    <div class="form-group col-md-2 col-xs-6">
                                        <input type="text" id="searchPersona" name="searchPersona" class="form-control" placeholder="Buscar" autocomplete="off" />
                                    </div>
                                    <div class="form-group col-md-2 col-xs-3">
                                        <button id="nuevaPersona" type="button" class="btn btn-default" data-toggle="modal" data-target="#modalNuevaPersona">
                                            <span class='glyphicon glyphicon-plus'></span>&nbsp;Agregar
                                        </button>
                                    </div>
                                </div>
                            }
                            <div class="row">
                                <div class="form-group col-md-12">
                                    <table id="personTable" class="table table-condensed table-hover">
                                        <tbody id="personListBody">
                                            @foreach (var persona in Model.Personas)
                                            {
                                                Html.RenderPartial("_RolPersona", persona, new ViewDataDictionary { { "noEditable", noEditable } });
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>

                        </div>
                    </div>
                </form>
                <div class="hr"></div>
                <div class="row">
                    <div class="col-md-6">

                        @if (Model.Estado == "" || Model.Estado == null)
                        {
                            <a href='@Url.Action("Index", "Plantacion")' type="button" class="btn btn-warning pull-left">
                                <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>&nbsp;Regresar al listado
                            </a>
                        }
                        else
                        {
                            <a href='@Url.Action("Index", "RNP")' type="button" class="btn btn-warning pull-left">
                                <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>&nbsp;Regresar al listado
                            </a>
                        }
                    </div>
                    <div class="col-md-6">
                        @if (noEditable)
                        {
                            <a href="#" type="button" class="btn btn-default btnNext pull-right">
                                <span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>&nbsp;Ver siguiente
                            </a>
                        }
                        else
                        {
                            <a href="#" type="button" class="btn btn-next btn-success pull-right" onClick="insertFormSectionOne()">
                                Grabar y continuar&nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>
                            </a>
                        }
                    </div>
                </div>
            </div>

            <!-- Pestaña de Datos de la Plantación -->
            <div role="tabpanel" class="tab-pane fade" id="areaTab">
                <form id="formRegSection2" name="formRegSection2">
                    <input type="hidden" id="Section2Id" name="Section2Id" value="@Model.Id" />
                    <div class="row">
                        <div class="form-group col-md-4">
                            <div class="checkbox">
                                <label>
                                    <input id="soloUnPredio" name="SoloUnPredio" type="checkbox" value="true" checked>
                                    <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                    Sólo ingresaré un solo predio
                                </label>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div id="datos_predio" class="row">
                                <div class="form-group  col-md-8">
                                    <label class="control-label" for="NombrePredio">Nombre del predio:</label>
                                    <input id="NombrePredio" name="NombrePredio" type="text" class="form-control" placeholder="Nombre del predio" value="@Model.NombrePredio" required />
                                </div>
                                <div class="form-group  col-md-4">
                                    <label class="control-label" for="CantidadArea">Área:</label>
                                    <input id="CantidadArea" name="CantidadArea" type="text" data-smk-type="decimal" class="form-control" placeholder="Cantidad del area del predio" value="@Model.Area" required />
                                </div>

                            </div>
                        </div>
                    </div>

                    <h3>Ubicación geográfica</h3> <div class='hr'></div>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label class="control-label"> Departamento:</label>
                            <select id="DepartamentoPredio" name="DepartamentoPredio" class="form-control dropdown" data-smk-noclear required></select>
                        </div>
                        <input id="DepartamentoPredioHidden" type="hidden" value="@Model.CodigoDepartamento" />
                        <div class="form-group col-md-4">
                            <label class="control-label"> Provincia:</label>
                            <select id="ProvinciaPredio" name="ProvinciaPredio" class="form-control dropdown" data-smk-noclear required></select>
                        </div>
                        <input id="ProvinciaPredioHidden" type="hidden" value="@Model.CodigoProvincia" />
                        <div class="form-group col-md-4">
                            <label class="control-label"> Distrito:</label>
                            <select id="DistritoPredio" name="DistritoPredio" class="form-control dropdown" data-smk-noclear required></select>
                        </div>
                        <input id="DistritoPredioHidden" type="hidden" value="@Model.Ubigeo_Id" />
                    </div>
                    <div class="row">

                        <input id="TipoZonaPredioHidden" type="hidden" value="@Model.TipoZona_Id" />
                        <div class="form-group col-md-3">
                            <label class="control-label"> Tipo de zona:</label>
                            <select id="TipoZonaPredio" name="TipoZonaPredio" class="form-control dropdown" required></select>
                        </div>
                        <div class="form-group col-md-3">
                            <label class="control-label"> Tipo de comunidades:</label>
                            <select id="TipoComunidad" name="TipoComunidad" class="form-control dropdown"></select>
                        </div>
                        <div class="form-group col-md-6">
                            <label class="control-label" for="NombreZonaPredio"> Nombre del Caserío o comunidad:</label>
                            <input id="NombreZonaPredio" name="NombreZonaPredio" type="text" maxlength="150" class="form-control" placeholder="Ingrese el nombre del caserío, comunidad, etc." value="@Model.NombreZona" />
                        </div>
                        <input id="TipoComunidadHidden" type="hidden" value="@Model.TipoComunidad_Id" />
                    </div>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label class="control-label" for="SistemaCoordenadasPredio"> Sistema de Coordenadas:</label>
                            <select id="SistemaCoordenadasPredio" name="SistemaCoordenadasPredio" class="form-control dropdown" required></select>
                            <span class='help-block errorDerecha'></span>
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label" for="CoordenadaEstePredio"> Coordenada UTM - Este:</label>
                            <input id="CoordenadaEstePredio" name="CoordenadaEstePredio" type="number" class="form-control" placeholder="Ingrese la coordenada UTM" value="@Model.CoordenadaEsteUTM" required />
                            <span class='help-block errorDerecha'></span>
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label" for="CoordenadaNortePredio"> Coordenada UTM - Norte:</label>
                            <input id="CoordenadaNortePredio" name="CoordenadaNortePredio" type="number" class="form-control" placeholder="Ingrese la coordenada UTM" value="@Model.CoordenadaNorteUTM" required />
                            <span class='help-block errorDerecha'></span>
                        </div>
                        <input id="SistemaCoordenadasPredioHidden" type="hidden" value="@Model.SistemaCoordenada_Id" />
                    </div>
                    <h3>Condición y contrato (de corresponder)</h3> <div class='hr'></div>
                    <div class="row esprivada">
                        <div class="form-group col-md-5">
                            <div class="row">
                                <div class="col-md-12">
                                    <label class="control-label">Condición:</label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-6">@*TYLER 12.12.19*@
                                    <div class="radio">
                                        <label>
                                            <input id="rbTerrestre" type="radio" name="Condicion" value="0" checked="@(Model.EsPropietario.Equals(true))" />
                                            <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                            Propietario
                                        </label>
                                    </div>
                                </div>
                                <div class="form-group col-md-6">@*TYLER 12.12.19*@
                                    <div class="radio">
                                        <label>
                                            <input id="rbTerrestre" type="radio" name="Condicion" value="1" checked="@(Model.EsInversionista.Equals(true))" />
                                            <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                            Inversionista
                                        </label>
                                    </div>
                                </div>
                                @*<div class="form-group col-md-4">//TYLER
                                    <div class="radio">
                                        <label>
                                            <input id="rbTerrestre" type="radio" name="Condicion" value="2" checked="@(Model.EsPosesionario.Equals(true))" />
                                            <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                            Posesionario
                                        </label>
                                    </div>
                                </div>*@

                            </div>
                        </div>
                        <div class="form-group col-md-5">
                            <label class="control-label" for="DocumentoCondicion"> Tipo/Número de Documento que Acredita:</label>
                            <input id="DocumentoCondicion" name="DocumentoCondicion" type="text" maxlength="50" class="form-control" placeholder="Tipo / Número de Documento que Acredita" value="@Model.DocumentoCondicion" />
                        </div>

                        <div class="form-group col-md-2">
                            <label class="control-label" for="numeroPredio"> Numero de Predio:</label>
                            <input id="numeroPredio" name="numeroPredios" type="text"  class="form-control" placeholder="Numero de Predio" value="@Model.NumeroPredio" />
                        </div>

                    </div>
                    <div class="row espublico">
                        <div class="form-group col-md-4">
                            <label class="control-label" for="inputnumreg">Tipo de contrato del T.H.:</label>
                            <select id="TipoAutorizacion" name="TipoAutorizacion" class="form-control dropdown" required></select>
                        </div>
                        <input id="TipoAutorizacionHidden" type="hidden" value="@Model.TipoAutorizacion_Id" />
                        <div class="form-group col-md-8">
                            <label class="control-label" for="DocumentoContrato">Número del contrato del T.H.:</label>
                            <input id="DocumentoContrato" name="DocumentoContrato" type="text" maxlength="50" class="form-control" placeholder="Número del documento de contrato" value="@Model.DocumentoContrato" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-12">
                            <label class="control-label" for="Observaciones">Observaciones:</label>
                            <input id="Observaciones" name="Observaciones" type="text" maxlength="500" class="form-control" placeholder="Observaciones" value="@Model.Observaciones" />
                        </div>
                    </div>
                </form>
                <div class='hr'></div>
                <div class="row">
                    <div class="col-md-6">
                        <a href="#" type="button" class="btn btn-default btnPrevious pull-left">
                            <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>&nbsp;Ir a la pestaña anterior
                        </a>
                    </div>
                    <div class="col-md-6">
                        @if (noEditable)
                        {
                            <a href="#" type="button" class="btn btn-default btnNext pull-right">
                                <span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>&nbsp;Ver siguiente
                            </a>
                        }
                        else
                        {
                            <a id="grabar2" href="#" type="button" class="btn btn-next btn-success pull-right">
                                Continuar&nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>
                            </a>
                        }
                    </div>
                </div>
            </div>

            <!-- Pestaña de Datos de los bloques o predios de la plantación -->
            <div role="tabpanel" class="tab-pane fade" id="detallesTab">
                <form id="formRegSection3" name="formRegSection3">
                    <h3>
                        Detalles de los Bloques
                        @if (!noEditable)
                        {
                            <a href="#" class="btn btn-success pull-right" data-toggle="modal" data-target="#modalDetallePlantacion"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span>&nbsp;Agregar</a>
                        }
                    </h3> <div class='hr'></div>
                    <div class="panel panel-success">
                        <div class="panel-heading">
                            <div class="row">
                                <div class="col-md-6">
                                    <h3 class="panel-title"><span id="badgeDetallesList" class="badge">@Model.Detalles.Count</span> Bloques registrados</h3>
                                </div>
                                <div class="col-md-5">
                                    <h4>Total Ha: <span id="badgeTotalArea" class="label label-default">@string.Format("{0:N}", Model.Detalles.Sum(d => d.CantidadSuperficieHa))</span> has.</h4>
                                    <input type="hidden" id="AreaPredio" name="AreaPredio" value="@Model.Area" />
                                </div>

                                <div class="col-md-1">

                                    <a id="validarMapa"><i class="glyphicon glyphicon-map-marker"></i>&nbsp;Validar todos los bloques</a>@*TYLER 12.12.19*@

                                </div>
                            </div>

                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <table class="table table-condensed table-bordered table-hover">
                                        <thead>
                                            <tr>
                                                <th class="text-center">
                                                    <b>Nombre de Bloque</b>
                                                </th>
                                                <th class="text-center">
                                                    <b>Mes y Año de Plantación</b>
                                                </th>
                                                <th class="text-center">
                                                    <b>Centroide UTM WGS84</b>
                                                </th>
                                                <th class="text-center">
                                                    <b>Sistema de Plantación</b>
                                                </th>
                                                <th class="text-center">
                                                    <b>Área (has.)</b>
                                                </th>
                                                <th class="text-center">
                                                    <b>Fines</b>
                                                </th>
                                                <th class="text-center">
                                                    <b>Opciones</b>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="detalleListBody">
                                            @foreach (var bloque in Model.Detalles)
                                            {
                                                Html.RenderPartial("_ItemBloque", bloque, new ViewDataDictionary { { "noEditable", noEditable } });

                                            }
                                        </tbody>

                                    </table>
                                </div>
                            </div>
                        </div>

                    </div>
                </form>
                <div class='hr'></div>
                <div class="row">
                    <div class="col-md-6">
                        <a href="#" type="button" class="btn btn-default btnPrevious pull-left">
                            <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>&nbsp;Ir a la pestaña anterior
                        </a>
                    </div>
                    <div class="col-md-6">
                        @if (noEditable)
                        {
                            <a href="#" type="button" class="btn btn-default btnNext pull-right">
                                <span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>&nbsp;Ver siguiente
                            </a>
                        }
                        else
                        {
                            <a href="#" type="button" class="btn btn-next btn-success pull-right" onClick="insertFormSectionThree()">
                                Continuar&nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>
                            </a>
                        }
                    </div>
                </div>
            </div>

            <!-- Pestaña de Datos de ESPECIES de la plantación -->
            <div role="tabpanel" class="tab-pane fade" id="especiesTab">
                <form id="formRegSection8" name="formRegSection8">
                    <h3>
                        Especies Forestales por Bloques
                        @if (!noEditable)
                        {
                            <a href="#" class="btn btn-success pull-right" data-toggle="modal" data-target="#modalDetalleEspecies"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span>&nbsp;Agregar</a>
                        }
                    </h3> <div class='hr'></div>
                    <div class="panel panel-success">
                        <div class="panel-heading">
                            <div class="row">
                                <div class="col-md-6">
                                    <h3 class="panel-title">
                                        @if (Model.Especies != null)
                                        {<span id="badgeEspeciesList" class="badge">@Model.Especies.Count</span>}
                                    else
                                    {<span id="badgeEspeciesList" class="badge">0</span>}
                                        Especies registradas
                                    </h3>
                                </div>
                            </div>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <table class="table table-condensed table-bordered table-hover">
                                        <thead>
                                            <tr>
                                                <th class="text-center">
                                                    <b>Nombre del Bloque</b>
                                                </th>
                                                <th class="text-center">
                                                    <b>Especie Forestal</b>
                                                </th>
                                                <th class="text-center">
                                                    <b>Total de individuos</b>
                                                </th>
                                                <th class="text-center">
                                                    <b>Producción Estimada</b>
                                                </th>
                                                <th class="text-center">
                                                    <b>Opciones</b>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="especieListBody">
                                            @if (Model.Especies != null)
                                            {
                                                foreach (var especie in Model.Especies)
                                                {
                                                    Html.RenderPartial("_ItemEspecie", especie, new ViewDataDictionary { { "noEditable", noEditable } });
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                    </div>
                </form>
                <div class='hr'></div>
                <div class="row">
                    <div class="col-md-6">
                        <a href="#" type="button" class="btn btn-default btnPrevious pull-left">
                            <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>&nbsp;Ir a la pestaña anterior
                        </a>
                    </div>
                    <div class="col-md-6">
                        @if (noEditable)
                        {
                            <a href="#" type="button" class="btn btn-default btnNext pull-right">
                                <span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>&nbsp;Ver siguiente
                            </a>
                        }
                        else
                        {
                            <a href="#" type="button" class="btn btn-next btn-success pull-right" onClick="insertFormSectionFour()">
                                Continuar&nbsp;<span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>
                            </a>
                        }
                    </div>
                </div>
            </div>

            <!-- Pestaña de Requerimientos -->
            <div role="tabpanel" class="tab-pane fade" id="requerimientosTab">
                <form id="formRegSection4" name="formRegSection4">
                    <input type="hidden" id="Section4Id" name="Section4Id" value="@Model.Id" />
                    <h3>
                        Documentos anexos
                    </h3>
                    <div class='hr'></div>
                    <div class="panel panel-success">
                        <div class="panel-heading">
                            <h3 class="panel-title">
                                @if (Model.Anexos != null)
                                {<span id="badgeAnexosModal" class="badge">@Model.Anexos.Where(a => a.Id > 0).Count()</span> }
                            else
                            {<span id="badgeAnexosModal" class="badge">0</span>}
                                Documentos anexos subidos al sistema
                            </h3>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <table class="table table-bordered table-hover">
                                        <thead>
                                            <tr>
                                                <th class="col-md-1">Formato</th>
                                                <th class="col-md-5">Nombre</th>
                                                <th class="col-md-2">Tamaño</th>
                                                <th class="col-md-3">Fecha</th>
                                                <th class="col-md-1">Acciones</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.Anexos != null)
                                            {
                                                foreach (var anexo in Model.Anexos.OrderBy(a => a.Secuencia))
                                                {
                                                    <tr id="anx-@anexo.Anexo_Id">
                                                        @if (anexo.Id > 0 && !string.IsNullOrEmpty(anexo.Ruta))
                                                        {
                                                            <td class="text-center">
                                                                <a href="@anexo.Ruta"><span class="glyphicon glyphicon-file"></span></a>
                                                            </td>
                                                            <td>
                                                                <a href="@anexo.Ruta">@anexo.Secuencia. @anexo.Descripcion</a>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="text-center">
                                                                <span class="glyphicon glyphicon-ban-circle"></span>
                                                            </td>
                                                            <td>
                                                                @anexo.Secuencia. @anexo.Descripcion
                                                            </td>
                                                        }
                                                        @if (anexo.Id > 0 && !string.IsNullOrEmpty(anexo.Ruta))
                                                        {
                                                            <td>@string.Format(new FileSizeFormatProvider(), "{0:fs}", anexo.Tamanio) </td>
                                                            <td>
                                                                <p><span class="glyphicon glyphicon-calendar"></span>&nbsp;Registrado el @anexo.FechaCreacion.ToString("dd-MMM-yyyy")</p>
                                                                <p><span class="glyphicon glyphicon-user"></span>&nbsp;por el usuario @anexo.UsuarioCreacion</p>
                                                            </td>
                                                            <td class="text-center">
                                                                <a href="#" class="btn btn-sm btn-danger" onclick="deleteDocumentoAnexo(@anexo.Id, '@Path.GetFileName(anexo.Ruta)', @anexo.Anexo_Id, '@anexo.Secuencia. @anexo.Descripcion')"><span class="glyphicon glyphicon-trash"></span></a>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            if (!noEditable)
                                                            {
                                                                <td class="text-center" colspan="2">
                                                                    <input type="file" class="form-control" id="FileAnexo_@anexo.Anexo_Id" />
                                                                </td>
                                                                <td class="text-center" colspan="1">
                                                                    <a href="#" class="btn btn-success" onclick="uploadArchivoAnexo(@anexo.Anexo_Id)">
                                                                        <span class="glyphicon glyphicon-upload"></span> Subir
                                                                    </a>
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td class="text-center" colspan="3"></td>
                                                            }

                                                        }
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>

                            </div>
                        </div>
                    </div>
                </form>
                <div class='hr'></div>
                <div class="row">
                    <div class="col-md-6">
                        <a href="#" type="button" class="btn btn-default btnPrevious pull-left">
                            <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>&nbsp;Ir a la pestaña anterior
                        </a>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Modal de coordenadas -->
<div class="modal fade" id="modalCoordenadas" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div id="headCoordenadas" class="modal-header">
                @if (!noEditable)
                {
                    <form id="formRegCoordenada" name="formRegCoordenada">
                        <input type="hidden" id="Section6Id" name="Section6Id" />
                        <input type="hidden" id="Section6LatMin" name="Section6LatMin" />
                        <input type="hidden" id="Section6LatMax" name="Section6LatMax" />
                        <input type="hidden" id="Section6LonMin" name="Section6LonMin" />
                        <input type="hidden" id="Section6LonMax" name="Section6LonMax" />
                        <div class="row">
                            <div class="form-group col-md-2">
                                <label class="control-label" for="NumeroSecuencia">N°</label>
                                <input id="NumeroSecuencia" name="NumeroSecuencia" type="number" class="form-control" required />
                            </div>
                            <div class="form-group col-md-4">
                                <label class="control-label" for="NumeroSecuencia">Coordenada Este:</label>
                                <input id="CoordenadaEsteUTM" name="CoordenadaEsteUTM" type="text" class="form-control" placeholder="Ingrese coordenada" required />
                                <span class='help-block errorDerecha'></span>
                            </div>
                            <div class="form-group col-md-4">
                                <label class="control-label" for="NumeroSecuencia">Coordenada Norte:</label>
                                <input id="CoordenadaNorteUTM" name="CoordenadaNorteUTM" type="text" class="form-control" placeholder="Ingrese coordenada" required />
                                <span class='help-block errorDerecha'></span>
                            </div>
                            <div class="form-group col-md-2">
                                <label class="control-label" for="NumeroSecuencia">&nbsp;</label>
                                <a id="grabaCoordenadas" href="#" class="btn btn-success pull-right"><span class="glyphicon glyphicon-save" aria-hidden="true"></span>&nbsp;Grabar</a>
                            </div>
                        </div>

                    </form>
                }
            </div>
            <div id="bodyCoordenadas" class="modal-body">
                <div class="panel panel-success">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-12">
                                <h3 class="panel-title"><span id="badgeCoordenadaList" class="badge">0</span> Coordenadas ingresadas</h3>
                            </div>

                        </div>

                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-12">
                                <table class="table table-condensed table-bordered">
                                    <thead>
                                        <tr>
                                            <th style="align-content:center">
                                                <b>N° Sec.</b>
                                            </th>
                                            <th style="align-content:center">
                                                <b>Coordenada Este</b>
                                            </th>

                                            <th style="align-content:center">
                                                <b>Coordenada Norte</b>
                                            </th>
                                            <th style="align-content:center">
                                                <button class="btn btn-danger btn-xs deleteLink" onClick="deleteCoordenadas()" type="button"><i class="glyphicon glyphicon-trash"></i></button>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody id="detalleCoordenada"></tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                @*<a href="@Url.Action("GoogleMapCoordenadas", "Plantacion", new { area = "Plantaciones", bloqueId = 0 })"
                       class="btn btn-next btn-info pull-left"
                       type="submit"
                       id="verMapa"
                       target="_blank">
                        <i class="glyphicon glyphicon-map-marker"></i>&nbsp;Ver mapa
                    </a>*@
                <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-log-out" aria-hidden="true"></span>&nbsp;Cerrar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para subir el archivo de coordenadas al sistema -->
<div class="modal fade" id="modalUploadCoordenadas" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div id="headArchivoCoordenadas" class="modal-header">
                <h4>Subir archivo de coordenadas al sistema</h4>
            </div>
            <div id="bodyArchivoCoordenadas" class="modal-body">
                <input type="hidden" id="Section7Id" name="Section7Id" />
                <input type="hidden" id="Section7LatMin" name="Section7LatMin" />
                <input type="hidden" id="Section7LatMax" name="Section7LatMax" />
                <input type="hidden" id="Section7LonMin" name="Section7LonMin" />
                <input type="hidden" id="Section7LonMax" name="Section7LonMax" />
                <div class="row">
                    <div class="col-md-9">
                        <input type="file" class="form-control" id="FileUpload1" accept="application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
                    </div>
                    <div class="col-md-3">
                        <div class="btn-group" role="group" aria-label="...">
                            <button type="button" class="btn btn-info" data-container="body" data-toggle="popover" data-trigger="focus" data-placement="right" title="Archivo de coordenadas o vértices"
                                    data-content="Subir archivo del....">
                                <span class="glyphicon glyphicon-question-sign" aria-hidden="true"></span>
                            </button>
                            <button class="btn btn-success" onclick="uploadArchivoCoordenadas()">
                                <i class="glyphicon glyphicon-upload"></i> Subir
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-log-out" aria-hidden="true"></span>&nbsp;Cerrar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de registros de plantaciones históricos (Formato 03) -->
<div class="modal fade" id="modalHistoricos" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div id="headHistoricos" class="modal-header">
                @if (noEditable)
                {
                    <div class="row">
                        <div class="form-group col-md-10">
                            <h4 class="modal-title">
                                Este registro de plantación no puede ser editado.
                                <button type="button" class="btn btn-info btn-xs" data-container="body" data-toggle="popover" data-trigger="focus" data-placement="right" title="Porqué veo este mensaje?"
                                        data-content="El presente registro de plantación ya ha sido aprobado. Para editarlo, previamente se generará un registro histórico o Formato N° 03. Si está seguro de hacer esto, haga click en el botón Actualizar.">
                                    <span class="glyphicon glyphicon-question-sign" aria-hidden="true"></span>
                                </button>
                            </h4>
                        </div>
                        <div class="form-group col-md-2">
                            <a href="#" class="btn btn-success" onClick="insertRegHistorico(@Model.Id)"><span class="glyphicon glyphicon-duplicate" aria-hidden="true"></span>&nbsp;Actualizar</a>
                        </div>
                    </div>
                }
                else
                {
                    <h4 class="modal-title">
                        Históricos del registro de plantación:
                    </h4>
                }
            </div>
            <div id="bodyHistoricos" class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-log-out" aria-hidden="true"></span>&nbsp;Cerrar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para el registro de bloques o predios -->
<div class="modal fade" id="modalDetallePlantacion" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <form id="formRegDetalle" name="formRegDetalle">
                    <input type="hidden" id="Section3IdBloque" name="Section3IdBloque" value="0" />
                    <input type="hidden" id="Section3Id" name="Section3Id" value="@Model.Id" />
                    <input type="hidden" id="Section3LatMin" name="Section3LatMin" />
                    <input type="hidden" id="Section3LatMax" name="Section3LatMax" />
                    <input type="hidden" id="Section3LonMin" name="Section3LonMin" />
                    <input type="hidden" id="Section3LonMax" name="Section3LonMax" />

                    <h4>Sobre el bloque</h4> <div class='hr'></div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label class="control-label" for="NombreBloque">Nombre del bloque:</label>
                            <input id="NombreBloque" name="NombreBloque" type="text" class="form-control" placeholder="Nombre del bloque" required />
                            <span class='help-block errorDerecha'></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label class="control-label" for="MesBloque">Mes:</label>
                            <select id="MesBloque" name="MesBloque" class="form-control dropdown" required>
                                <option value="">Mes</option>
                                <option value="1">Enero</option>
                                <option value="2">Febrero</option>
                                <option value="3">Marzo</option>
                                <option value="4">Abril</option>
                                <option value="5">Mayo</option>
                                <option value="6">Junio</option>
                                <option value="7">Julio</option>
                                <option value="8">Agostro</option>
                                <option value="9">Septiembre</option>
                                <option value="10">Octubre</option>
                                <option value="11">Noviembre</option>
                                <option value="12">Diciembre</option>
                            </select>
                            <span class='help-block errorDerecha'></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label class="control-label" for="AnioBloque">Año:</label>
                            <input id="AnnioBloque" type="number" name="AnnioBloque" class="form-control" placeholder="Año" required />
                            <span class='help-block errorDerecha'></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label class="control-label" for="SistemaCoordenadas"> Sistema de Coordenadas:</label>
                            <select id="SistemaCoordenadas" name="SistemaCoordenadas" class="form-control dropdown" required></select>
                            <span class='help-block errorDerecha'></span>
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label" for="CoordenadaEsteBloque"> Coordenada UTM - Este:</label>
                            <input id="CoordenadaEsteBloque" name="CoordenadaEsteBloque" type="number" class="form-control" placeholder="Ingrese la coordenada UTM" />
                            <span class='help-block errorDerecha'></span>
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label" for="CoordenadaNorteBloque"> Coordenada UTM - Norte:</label>
                            <input id="CoordenadaNorteBloque" name="CoordenadaNorteBloque" type="number" class="form-control" placeholder="Ingrese la coordenada UTM" />
                            <span class='help-block errorDerecha'></span>
                        </div>
                    </div>
                    <h4>Del tipo de plantación</h4> <div class='hr'></div>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label class="control-label"> Sistema de plantación:</label>
                            <select id="TipoPlantacion" name="TipoPlantacion" class="form-control dropdown" required></select>
                            <span class='help-block errorDerecha'></span>
                            <input type="hidden" id="Section3TipoPlantacionDesc" name="Section3TipoPlantacionDesc" />
                            <input type="hidden" id="Section3TipoSistemaHidden" />
                            <input id="TipoPlantacionHidden" type="hidden" />
                        </div>
                        <div class="form-group col-md-4" id="campo_area">
                            <label class="control-label" for="CantidadSuperficieHa"> Superficie (Ha):</label>
                            <input id="CantidadSuperficieHa" name="CantidadSuperficieHa" type="number" class="form-control" placeholder="Superficie en hectáreas" />
                            <span class='help-block errorDerecha'></span>




                        </div>
                        <div class="form-group col-md-4" id="campo_linea">
                            <label class="control-label" for="CantidadSuperficieMl"> Superficie (m2):</label>
                            <input id="CantidadSuperficieMl" name="CantidadSuperficieMl" type="number" class="form-control" placeholder="Longitud x ancho" />
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label"> Fines:</label>
                            <select id="FinalidadProducto" name="FinalidadProducto" class="form-control dropdown" required></select>
                            <span class='help-block errorDerecha'></span>
                            <input type="hidden" id="Section3Fines" name="Section3Fines" />
                        </div>
                        <input id="FinalidadProductoHidden" type="hidden" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="col-md-6">
                    <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar registro</button>
                </div>
                <div class="col-md-6">
                    <a id="grabarColeccion1" href="#" type="button" class="btn btn-success pull-right">
                        <span class="glyphicon glyphicon-save" aria-hidden="true"></span>&nbsp;Registrar Bloque
                    </a>
                </div>

            </div>
        </div>
    </div>
</div>

<!-- Modal para el registro de especies por bloques -->
<div class="modal fade" id="modalDetalleEspecies" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="row">
                    <div class="col-md-10">
                        <h4 class="modal-title" id="exampleModalLabel">Detalle por Especie</h4>
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <form id="formRegEspecie" name="formRegEspecie">
                    <input type="hidden" id="Section8IdEspecie" name="Section8IdEspecie" value="0" />
                    <div class="row">
                        <div class="form-group col-md-12">
                            <label class="control-label" for="NombreComun">Buscar:</label>
                            <input id="searchEspecie" class="form-control" placeholder="4 letras min." />
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-12">
                            <label class="control-label" for="NombreCientifico">Especie Forestal:</label>
                            <input id="NombreCientifico" name="NombreCientifico" type="text" class="form-control" placeholder="Nombre cientifico" readonly />
                            <input id="Especie_Id" name="Especie_Id" type="hidden" />
                            <span class='help-block errorDerecha'></span>
                        </div>
                        <div class="form-group col-md-12">
                            <label class="control-label" for="NombreComun">Nombre comun (Editable):</label>
                            <input id="NombreComun" name="NombreComun" type="text" class="form-control" placeholder="Puede ingresar/modificar el nombre comun" />
                            <span class='help-block errorDerecha'></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label class="control-label" for="TotalPlantado">Total:</label>
                            <input id="TotalPlantado" name="TotalPlantado" type="number" class="form-control" placeholder="# individuos" />
                            <span class='help-block errorDerecha'></span>
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label"> Tipo:</label>
                            <select id="TipoPlantado" name="TipoPlantado" class="form-control dropdown"></select>
                            <span class='help-block errorDerecha'></span>
                            <input type="hidden" id="TipoPlantadoHidden" />
                            <input type="hidden" id="TipoPlantadoDesc" name="TipoPlantadoDesc" value="" />
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label" for="AlturaPromedio">Altura prom.:</label>
                            <input id="AlturaPromedio" name="AlturaPromedio" type="number" class="form-control" placeholder="Altura promedio" />
                        </div>
                    </div>
                    <div class="row">

                        <div class="form-group col-md-4">
                            <label class="control-label" for="ProduccionEstimada">Produccion estimada:</label>
                            <input id="ProduccionEstimada" name="ProduccionEstimada" type="number" class="form-control" placeholder="Producción estimada" />
                            <span class='help-block errorDerecha'></span>
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label" for="ProduccionEstimada">Unidad</label>
                            <select id="UnidadMedida" name="UnidadMedida" class="form-control dropdown" required></select>
                            <span class='help-block errorDerecha'></span>
                            <input type="hidden" id="UnidadMedidaHidden" />
                            <input type="hidden" id="UnidadMedidaSimbolo" name="UnidadMedidaSimbolo" value="" />
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label" for="BloqueAsig">Bloque</label>
                            <select id="BloqueAsig" name="BloqueAsig" class="form-control dropdown" required></select>
                            <span class='help-block errorDerecha'></span>
                            <input type="hidden" id="BloqueAsigHidden" />
                            <input type="hidden" id="BloqueAsigDesc" name="BloqueAsigDesc" value="" />
                        </div>

                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="col-md-6">
                    <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar registro</button>
                </div>
                <div class="col-md-6">
                    <a id="grabarColeccion2" href="#" type="button" class="btn btn-success pull-right">
                        <span class="glyphicon glyphicon-save" aria-hidden="true"></span>&nbsp;Registrar Especie
                    </a>
                </div>

            </div>
        </div>
    </div>
</div>


<!-- Modal para agregar una nueva persona -->
<div class="modal fade in" id="modalNuevaPersona" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body">
                <form id="formRegPersona" name="formRegPersona">
                    <h4>Datos generales</h4><div class='hr'></div>
                    <div class="row">
                        <div class="form-group col-md-12">
                            <div class="checkbox">
                                <label>
                                    <input id="EsJuridica" name="EsJuridica" type="checkbox" value="false" onchange="formRegistrarPersona.showDatosJuridica()">
                                    <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                    Es jurídica
                                </label>
                            </div>
                        </div>
                    </div>
                    <div id="datosJuridica" class="row" hidden>
                        <div class="form-group col-md-4">
                            <label class="control-label" for="numRUC">RUC:</label>
                            <input id="numRUC" name="NumeroRuc" type="number" minlength="11" maxlength="11" class="form-control" placeholder="Ingrese el número de RUC" />
                            <label id="errorRUC" class="error"></label>
                        </div>
                        <div class="form-group col-md-8">


                            <label class="control-label" for="RazonSocial">Razón social:</label>
                            <img class="cargando" height="40" width="40" src="~/Content/images/cargando.gif" hidden />
                            <input id="razonSoc" name="RazonSocial" type="text" class="form-control" minlength="5" maxlength="150" placeholder="Ingrese el RUC" />
                        </div>
                    </div>
                    <div id="datosNatural" class="row">
                        <div class="col-md-12">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    <label class="control-label"> Tipo de documento:</label>
                                    <select id="TipoDocumento" name="TipoDocumento" class="form-control dropdown" data-smk-noclear required></select>
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label" for="NumeroDocumento"> Número de documento:</label>
                                    <input id="numdocumento" name="NumeroDocumento" type="text" minlength="7" maxlength="15" class="form-control" placeholder="Ingrese el número del documento" required />
                                    <label id="errorDNI" class="error"></label>
                                </div>
                            </div>
                            <div id="nombreDividido" class="row">
                                <div class="form-group col-md-4">
                                    <label class="control-label" for="Nombres">Nombres:</label>
                                    <img class="cargando" height="40" width="40" src="~/Content/images/cargando.gif" hidden />
                                    <input id="nombres" name="Nombres" type="text" class="form-control" minlength="3" maxlength="150" placeholder="Ingrese el Nombre" />
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label" for="ApePataterno">Apellido paterno:</label>
                                    <input id="apePat" type="text" name="ApellidoPaterno" class="form-control" minlength="3" maxlength="150" placeholder="Ingrese el Apellido Paterno" />
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label" for="apeMaterno">Apellido materno:</label>
                                    <input id="apeMat" type="text" name="ApellidoMaterno" class="form-control" minlength="3" maxlength="150" placeholder="Ingrese el Apellido Materno" />
                                </div>
                            </div>
                            <div id="nombreCompleto" class="row" hidden>
                                <div class="form-group col-md-12">
                                    <label class="control-label" for="RazonSocial2">Razón Social:</label>
                                    <img class="cargando" height="40" width="40" src="~/Content/images/cargando.gif" hidden />
                                    <input id="razonsocial2" name="RazonSocial2" type="text" class="form-control" minlength="3" maxlength="150" placeholder="Ingrese el RUC" />
                                </div>
                            </div>
                            @*gpaima - 27.08.2019
                                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <label class="control-label">Género:</label>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="form-group col-md-6">
                                                <div class="radio">
                                                    <label>
                                                        <input id="rbTerrestre" type="radio" name="Sexo" value="M" checked />
                                                        <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                                        Masculino
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="form-group col-md-6">
                                                <div class="radio">
                                                    <label>
                                                        <input id="rbTerrestre" type="radio" name="Sexo" value="F" />
                                                        <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                                                        Femenino
                                                    </label>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="form-group col-md-4">
                                        <label class="control-label" for="FechaNacimiento">Fecha de nacimiento:</label>
                                        <input id="fechareg" name="FechaNacimiento" type="date" class="form-control" placeholder="Fecha de Nacimiento" />
                                    </div>
                                    <div class="form-group col-md-4">
                                        <label class="control-label" for="EstadoCivil">Estado civil:</label>
                                        <div class="dropdown">
                                            <select id="EstadoCivil" name="EstadoCivil" class="form-control dropdown"></select>
                                        </div>
                                    </div>
                                </div>*@
                        </div>
                    </div>

                    <h4>Ubigeo</h4><div class='hr'></div>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label class="control-label"> Departamento:</label>
                            <select id="Departamento" name="Departamento" class="form-control dropdown" data-smk-noclear required></select>
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label"> Provincia:</label>
                            <select id="Provincia" name="Provincia" class="form-control dropdown" data-smk-noclear required></select>
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label"> Distrito:</label>
                            <select id="Distrito" name="Distrito" class="form-control dropdown" data-smk-noclear required></select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-5">
                            <label class="control-label" for="caserio"> Dirección:</label>
                            <input id="direccion" name="Direccion" type="text" maxlength="250" class="form-control" placeholder="Ingrese la dirección de la persona" />
                        </div>
                        @*gpaima - 27.08.2019
                                            <div class="form-group col-md-3">
                                <label class="control-label"> Tipo de zona:</label>
                                <select id="TipoZona" name="TipoZona" class="form-control dropdown"></select>
                            </div>
                            <div class="form-group col-md-4">
                                <label class="control-label" for="descpredio"> Nombre de la zona:</label>
                                <input id="caserio" name="NombreZona" type="text" maxlength="150" class="form-control" placeholder="Ingrese el nombre del caserío, comunidad, etc." />
                            </div>*@
                    </div>

                    <h4>Información de contacto</h4><div class='hr'></div>
                    <div class="row">
                        <div class="form-group col-md-3">
                            <label class="control-label" for="telFijo">Teléfono:</label>
                            <input id="telFijo" name="Telefono" type="number" maxlength="15" class="form-control" placeholder="Ingrese número" />
                        </div>
                        <div class="form-group col-md-3">
                            <label class="control-label" for="telCel">Celular:</label>
                            <input id="telCel" name="Celular" type="number" maxlength="15" class="form-control" placeholder="Ingrese número" />
                        </div>
                        <div class="form-group col-md-6">
                            <label class="control-label" for="eMail">Correo electrónico:</label>
                            <input id="email" name="Email" type="email" class="form-control" placeholder="Ingrese el email" />
                        </div>
                    </div>



                </form>
            </div>
            <div class="modal-footer">
                <div class="col-md-6">
                    <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar registro</button>
                </div>
                <div class="col-md-6">
                    <a href="#" type="button" class="btn btn-success pull-right" onClick="formRegistrarPersona.insertFormPersona()">
                        <span class="glyphicon glyphicon-save" aria-hidden="true"></span>&nbsp;Registrar persona
                    </a>
                </div>

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<!-- Modal de revisiones -->
<div class="modal fade" id="modalRevision" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div id="headRevisiones" class="modal-header">
                @if ((User.IsInRole("ESPFORDIR") && Model.AprobadoDIR)
|| (User.IsInRole("ESPCATAST") && Model.AprobadoCatastro))
                {
                    <h4 class="modal-title">
                        Ya realizó la aprobación del registro.
                        <button type="button" class="btn btn-info btn-xs" data-container="body" data-toggle="popover" data-trigger="focus" data-placement="right" title="Porqué veo este mensaje?"
                                data-content="Ud. u otro usuario con el mismo perfil ya han aprobado este registro de plantación o no es editable. Si cree que esto es un error, pónganse en contacto con el administrador del sistema.">
                            <span class="glyphicon glyphicon-question-sign" aria-hidden="true"></span>
                        </button>
                    </h4>
                }
                else
                {
                    <form id="formRegRevision" name="formRegRevision">
                        <input type="hidden" id="Section5Id" name="Section5Id" value="@Model.Id" />
                        <div class="row">
                            <div class="form-group col-md-9">
                                <textarea id="ObservacionRevision" name="ObservacionRevision" class="form-control" rows="2" placeholder="Ingrese su observación" autofocus required></textarea>
                            </div>
                            <div class="form-group col-md-3">
                                <div class="btn-group btn-group-justified" role="group" aria-label="...">
                                    <a id="revObservar" href="#" class="btn btn-warning" onClick="insertFormRevision(false)"><span class="glyphicon glyphicon-thumbs-down" aria-hidden="true"></span>&nbsp;Observar</a>
                                    <a id="revAprobar" href="#" class="btn btn-success" onClick="insertFormRevision(true)"><span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"></span>&nbsp;Aprobar</a>
                                </div>
                            </div>
                        </div>
                    </form>

                }
            </div>
            <div id="bodyRevisiones" class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-log-out" aria-hidden="true"></span>&nbsp;Cerrar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para mostrar la información de detalle de la persona -->
<div class="modal fade" id="modalDetallesPersona" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div id="bodyDetails" class="modal-body" style="padding:5px">

            </div>
            <div class="modal-footer" style="padding:5px">
                <button type="button" class="btn btn-default pull-right" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>
<input id="RolName" type="hidden" value="@ViewBag.RoleName" />
<input id="SedeId" type="hidden" value="@ViewBag.SedeId" />
@section scripts {

    <!-- Scripts para mantenimiento de los Documentos Anexos -->
    <!-- <script src="~/node_modules/reniec-sunat-js/dist/reniec-sunat-js.min.js"></script> -->

    <script type="text/javascript">

        function formatterTotalArea(data) {
            var total = 0;
            $.each(data, function (i, row) {
                total += row.Area;
            });
            return total.toFixed(2) +' has.';
        }

        function validarPredio(numeroPredio) {
                var isValid = false;
                var regex = /^[0-9]{1,8}$/g;
                isValid = !numeroPredio || regex.test(numeroPredio);
                return isValid;
}
         


    var idPersona = 0;

    var formSeccion2 = (function (window, undefined) {

            var initPrivado = function () {
                inscribeEventos();
                limpiaFormulario();

                getDepartamentos2();
                getSistemaCoordenadaPredio();
                getTipoZonaPredio();
                getTipoAutorizacion();
                getTipoComunidad();
            },
                inscribeEventos = function () {
                    $("#DepartamentoPredio").change(function () {
                        $("#DistritoPredio").empty();
                        $("#DistritoPredio").append('<option value="">Seleccione un distrito</option>');
                        getProvincias2($("#DepartamentoPredio").val());
                        return false;
                    });
                    $("#ProvinciaPredio").change(function () {
                        getDistritos2($("#DepartamentoPredio").val(), $("#ProvinciaPredio").val());
                        return false;
                    });
                    $("#soloUnPredio").change(function () {
                        showDatosPredio();
                        return false;
                    });
                    $('#SistemaCoordenadasPredio').change(function () {
                        var rspta = validaSelRequerido8($('#SistemaCoordenadasPredio'), $('#SistemaCoordenadasPredio').val());
                        if (rspta) {
                            var latmin = parseFloat($('#SistemaCoordenadasPredio').find(":selected").attr('data-latitudmin'));
                            var latmax = parseFloat($('#SistemaCoordenadasPredio').find(":selected").attr('data-latitudmax'));
                            //$("#Section3IdBloque").val("0");
                            //$("#Section3IdBloque").val("0");
                            var lat = parseFloat($('#CoordenadaNortePredio').val());
                            validaRango8($('#CoordenadaNortePredio'), lat, latmin, latmax);
                            var lonmin = parseFloat($('#SistemaCoordenadasPredio').find(":selected").attr('data-longitudmin'));
                            var lonmax = parseFloat($('#SistemaCoordenadasPredio').find(":selected").attr('data-longitudmax'));
                            var lon = parseInt($('#CoordenadaEstePredio').val());
                            validaRango8($('#CoordenadaEstePredio'), lon, lonmin, lonmax);
                        }
                        else {
                            $('#CoordenadaEstePredio').parent().removeClass("has-feedback has-error");
                            $('#CoordenadaEstePredio').parent().find("span").html('');
                            $('#CoordenadaEstePredio').parent().find("span").hide();
                            $('#CoordenadaNortePredio').parent().removeClass("has-feedback has-error");
                            $('#CoordenadaNortePredio').parent().find("span").html('');
                            $('#CoordenadaNortePredio').parent().find("span").hide();
                        }
                        return false;
                    });
                    $("#TipoZonaPredio").change(function () {
                        if ($("#TipoZonaPredio").val() == 1 || $("#TipoZonaPredio").val() == 2) {
                            let privs = $(".esprivada");
                            $.each(privs, function (i, obj) {
                                obj.style.display = "block";
                            });
                            let pubs = $(".espublico");
                            $.each(pubs, function (i, obj) {
                                obj.style.display = "none";
                            });
                        }
                        else if ($("#TipoZonaPredio").val() == 4) {
                            let privs = $(".esprivada");
                            $.each(privs, function (i, obj) {
                                obj.style.display = "none";
                            });
                            let pubs = $(".espublico");
                            $.each(pubs, function (i, obj) {
                                obj.style.display = "block";
                            });
                        }
                        else {
                            let privs = $(".esprivada");
                            $.each(privs, function (i, obj) {
                                obj.style.display = "block";
                            });
                            let pubs = $(".espublico");
                            $.each(pubs, function (i, obj) {
                                obj.style.display = "block";
                            });
                        }
                        if ($("#TipoZonaPredio").val() == 2) {
                            $("#TipoZonaPredio").parent().removeClass('col-md-4');
                            $("#TipoZonaPredio").parent().addClass('col-md-3');
                            $("#NombreZonaPredio").parent().removeClass('col-md-8');
                            $("#NombreZonaPredio").parent().addClass('col-md-6');
                            $("#TipoComunidad").parent().show();

                        }
                        else {
                            $("#TipoZonaPredio").parent().removeClass('col-md-3');
                            $("#TipoZonaPredio").parent().addClass('col-md-4');
                            $("#NombreZonaPredio").parent().removeClass('col-md-6');
                            $("#NombreZonaPredio").parent().addClass('col-md-8');
                            $("#TipoComunidad").parent().hide();
                        }
                        return false;
                    });
                    $('#grabar2').click(function () {
                        insert();
                        return false;
                    });
                },
                limpiaFormulario = function () {
                    $("#ProvinciaPredio").empty();
                    $("#ProvinciaPredio").append('<option value="">Seleccione una provincia</option>');
                    $("#DistritoPredio").empty();
                    $("#DistritoPredio").append('<option value="">Seleccione un distrito</option>');
                },
                getDepartamentos2 = function () {
                    let sedeid = 0;
                    if ($('#RolName')[0].value == "REGISTRADOR" || $('#RolName')[0].value == "ESPATFFS") {
                        sedeid = $('#SedeId')[0].value;
                    }
                    console.log('Departamento vacío');
                    $("#DepartamentoPredio").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetDepartamentos", "Ubigeo", new { area = "General" })',
                        dataType: 'json',
                        data: { sedeId: sedeid },
                        cache: false,
                        success: function (departamentos) {
                            $.each(departamentos, function (i, departamento) {
                                $("#DepartamentoPredio").append('<option value="' + departamento.Value + '">' + departamento.Text + '</option>');
                            });
                            if ($('input#DepartamentoPredioHidden').val().trim() != "") $("#DepartamentoPredio").val($('input#DepartamentoPredioHidden').val()).change();
                            console.log('Departamento lleno');
                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar el listado de departamentos. " + ex);
                        }

                    });
                },
                getProvincias2 = function (codDep, codProv = "") {
                    let sedeid = 0;
                    if ($('#RolName')[0].value == "REGISTRADOR" || $('#RolName')[0].value == "ESPATFFS") {
                        sedeid = $('#SedeId')[0].value;
                    }
                    $("#ProvinciaPredio").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetProvincias", "Ubigeo", new { area = "General" })',
                        dataType: 'json',
                        data: { sedeId: sedeid, codigoDep: codDep },
                        cache: false,
                        success: function (provincias) {
                            $.each(provincias, function (i, provincia) {
                                $("#ProvinciaPredio").append('<option value="' + provincia.Value + '">' + provincia.Text + '</option>');
                            });
                            if ($('input#ProvinciaPredioHidden').val().trim() != "") $("#ProvinciaPredio").val($('input#ProvinciaPredioHidden').val()).change();
                            //if (codProv != "") $("#ProvinciaPredio").val(codProv);
                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar el listado de provincias. " + ex);
                        }
                    });

                },
                getDistritos2 = function (codDep, codProv, codDst = "") {
                    let sedeid = 0;
                    if ($('#RolName')[0].value == "REGISTRADOR" || $('#RolName')[0].value == "ESPATFFS") {
                        sedeid = $('#SedeId')[0].value;
                    }
                    $("#DistritoPredio").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetDistritos", "Ubigeo", new { area = "General" })',
                        dataType: 'json',
                        data: { sedeId: sedeid, codigoDep: codDep, codigoProv: codProv },
                        cache: false,
                        success: function (distritos) {
                            $.each(distritos, function (i, distrito) {
                                $("#DistritoPredio").append('<option value="' + distrito.Value + '">' + distrito.Text + '</option>');
                            });

                            if ($('input#DistritoPredioHidden').val().trim() != "") $("#DistritoPredio").val($('input#DistritoPredioHidden').val());

                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar el listado de distritos." + ex);
                        }
                    });
                },
                getSistemaCoordenadaPredio = function () {
                    $("#SistemaCoordenadasPredio").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetSistemaCoordenadas")',
                        dataType: 'json',
                        data: {},
                        success: function (sistemas) {
                            //console.log(sistemas);
                            $.each(sistemas, function (i, sistema) {
                                $("#SistemaCoordenadasPredio").append('<option value="' + sistema.Value + '" data-latitudmin="' + sistema.dataLatitudMin + '" data-latitudmax="' + sistema.dataLatitudMax + '" data-longitudmin="' + sistema.dataLongitudMin + '" data-longitudmax="' + sistema.dataLongitudMax + '" >' + sistema.Text + '</option>');
                            });

                            if ($('input#SistemaCoordenadasPredioHidden').val().trim() != "") $("#SistemaCoordenadasPredio").val($('input#SistemaCoordenadasPredioHidden').val());

                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar los sistemas de coordenadas." + ex)
                        }

                    });
                },
                getTipoZonaPredio = function () {
                    $("#TipoZonaPredio").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetTiposZona", "DatosTipo", new { area = "General" })',
                        dataType: 'json',
                        data: {},
                        success: function (tiposZona) {
                            $.each(tiposZona, function (i, tipo) {
                                $("#TipoZonaPredio").append('<option value="' + tipo.Value + '">' + tipo.Text + '</option>');
                            });

                            if ($('input#TipoZonaPredioHidden').val().trim() != "") {
                                $("#TipoZonaPredio").val($('input#TipoZonaPredioHidden').val());
                                if ($("#TipoZonaPredio").val() == 1 || $("#TipoZonaPredio").val() == 2) {
                                    let privs = $(".esprivada");
                                    $.each(privs, function (i, obj) {
                                        obj.style.display = "block";
                                    });
                                    let pubs = $(".espublico");
                                    $.each(pubs, function (i, obj) {
                                        obj.style.display = "none";
                                    });
                                }
                                else if ($("#TipoZonaPredio").val() == 4) {
                                    let privs = $(".esprivada");
                                    $.each(privs, function (i, obj) {
                                        obj.style.display = "none";
                                    });
                                    let pubs = $(".espublico");
                                    $.each(pubs, function (i, obj) {
                                        obj.style.display = "block";
                                    });
                                }
                                else {
                                    let privs = $(".esprivada");
                                    $.each(privs, function (i, obj) {
                                        obj.style.display = "block";
                                    });
                                    let pubs = $(".espublico");
                                    $.each(pubs, function (i, obj) {
                                        obj.style.display = "block";
                                    });
                                }
                            }
                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar los tipos de zona." + ex)
                        }

                    });
                },
                getTipoComunidad = function () {
                    $("#TipoComunidad").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetTiposComunidades", "DatosTipo", new { area = "General" })',
                        dataType: 'json',
                        data: {},
                        success: function (tiposComunidades) {
                            $.each(tiposComunidades, function (i, tipo) {
                                $("#TipoComunidad").append('<option value="' + tipo.Value + '">' + tipo.Text + '</option>');
                            });

                            if ($('input#TipoComunidadHidden').val().trim() != "") $("#TipoComunidad").val($('input#TipoComunidadHidden').val());
                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar los tipos de comunidades." + ex)
                        }

                    });
                },
                getTipoAutorizacion = function () {
                    $("#TipoAutorizacion").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetTiposAutorizacion", "DatosTipo", new { area = "General" })',
                        dataType: 'json',
                        data: {},
                        success: function (tiposAutorizacion) {
                            $.each(tiposAutorizacion, function (i, tipo) {
                                $("#TipoAutorizacion").append('<option value="' + tipo.Value + '">' + tipo.Text + '</option>');
                            });

                            if ($('input#TipoAutorizacionHidden').val().trim() != "") $("#TipoAutorizacion").val($('input#TipoAutorizacionHidden').val());
                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar los tipos de documento." + ex)
                        }

                    });
                },
                validaSelRequerido8 = function (objeto, valor) {
                    if (valor > 0) {
                        objeto.parent().removeClass("has-feedback has-error");
                        objeto.parent().find("span").html('');
                        objeto.parent().find("span").hide();
                        return true;
                    }
                    else {
                        objeto.parent().addClass("has-feedback has-error");
                        objeto.parent().find("span").html('Valor es requerido');
                        objeto.parent().find("span").show();
                        return false;
                    }
                },
                validaRango8 = function (objeto, valor, minimo, maximo) {
                    if (valor >= minimo && valor <= maximo) {
                        objeto.parent().removeClass("has-feedback has-error");
                        objeto.parent().find("span").html('');
                        objeto.parent().find("span").hide();
                        return true;
                    }
                    else {
                        objeto.parent().addClass("has-feedback has-error");
                        objeto.parent().find("span").html('Valor entre ' + minimo + ' y ' + maximo);
                        objeto.parent().find("span").show();
                        return false;
                    }
                },
                showDatosPredio = function () {
                    if ($('#soloUnPredio').is(":checked")) {
                        $('#soloUnPredio').val('true');
                        $("#datos_predio").show();

                        $('#NombrePredio').attr('required', '');
                        $('#CantidadArea').attr('required', '');
                    }
                    else {
                        $('#soloUnPredio').val('false');
                        $("#datos_predio").hide();

                        $('#NombrePredio').removeAttr('required');
                        $('#NombrePredio').removeAttr('value');
                        $('#CantidadArea').removeAttr('required');
                        $('#CantidadArea').removeAttr('value');
                    }
                    return false;
                },
                insert = function () {

                    var numeroPredio = $("#numeroPredio").val();
                    var isValid = validarPredio(numeroPredio);

                    if (isValid) {
                        if ($('#formRegSection2').smkValidate()) {
                            /*   ACA   */
                            var tipo = $('#TipoAutorizacion').get(0);
                            var doc = $('#DocumentoContrato').get(0);
                            var opt = $('#rbTerrestre[name="Condicion"]:checked');
                            var con = $('#DocumentoCondicion').get(0);

                            if (opt.length > 0 && con.value == "") {
                                showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "Debe ingresar el Tipo/Número de Documento que Acredita");
                                $('#DocumentoCondicion').focus();
                            }
                            else {
                                if (tipo.value > 0 && doc.value == "") {
                                    showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "Debe ingresar el número de contrato");
                                    $('#DocumentoContrato').focus();
                                }
                                else {


                                    if ($('#CantidadArea').val() > 0) {

                                        var rspta = validaSelRequerido8($('#SistemaCoordenadasPredio'), $('#SistemaCoordenadasPredio').val());
                                        if (rspta) {
                                            let latmin = parseFloat($('#SistemaCoordenadasPredio').find(":selected").attr('data-latitudmin'));
                                            let latmax = parseFloat($('#SistemaCoordenadasPredio').find(":selected").attr('data-latitudmax'));
                                            let lat = parseFloat($('#CoordenadaNortePredio').val());

                                            let norte = validaRango8($('#CoordenadaNortePredio'), lat, latmin, latmax);
                                            let lonmin = parseFloat($('#SistemaCoordenadasPredio').find(":selected").attr('data-longitudmin'));
                                            let lonmax = parseFloat($('#SistemaCoordenadasPredio').find(":selected").attr('data-longitudmax'));
                                            let lon = parseInt($('#CoordenadaEstePredio').val());
                                            let este = validaRango8($('#CoordenadaEstePredio'), lon, lonmin, lonmax);

                                            if (norte && este) {
                                                var form = $("#formRegSection2").serialize();
                                                $.ajax({
                                                    async: true,
                                                    type: 'POST',
                                                    url: '@Url.Action("RegisterSectionTwo", "Plantacion", new { area = "Plantaciones" })',
                                                    data: form,
                                                    dataType: 'json',
                                                    success: function (result) {
                                                        if (result != null && result.success) {
                                                            showNotification(constantes.tipoAlerta.SUCCESS, "¡En hora Buena!", "Los datos del área/predio fueron registrados correctamente. ");
                                                            /*enable next tab*/
                                                            $('.nav #li3').removeClass('disabled');
                                                            $('.nav #li3').find('a').attr("data-toggle", "tab")
                                                            $('.nav-tabs > .active').next('li').find('a').trigger('click');
                                                        }
                                                        else {
                                                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!",
                                                                "Ocurrió un error al intentar registrar los datos del predio. Por favor verifique la información ingresada y el siguiente mensaje: " + result.responseText);
                                                        }
                                                    },
                                                    error: function (ex) {
                                                        showNotification(constantes.tipoAlerta.DANGER, "¡Error del sistema!", "No se pudo conectar con el servicio solicitado: " + ex);
                                                    }
                                                });
                                            }
                                            else {
                                                showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "Debe ingresar coordenadas correctas");
                                                $('#CoordenadaEstePredio').focus();
                                            }
                                        }
                                        else {
                                            $('#CoordenadaEstePredio').parent().removeClass("has-feedback has-error");
                                            $('#CoordenadaEstePredio').parent().find("span").html('');
                                            $('#CoordenadaEstePredio').parent().find("span").hide();
                                            $('#CoordenadaNortePredio').parent().removeClass("has-feedback has-error");
                                            $('#CoordenadaNortePredio').parent().find("span").html('');
                                            $('#CoordenadaNortePredio').parent().find("span").hide();
                                        }
                                    }
                                    else {
                                        showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "El área del predio debe ser mayor a 0 has.");
                                        $('#CantidadArea').focus();
                                    }
                                }
                            }
                        }
                        else {
                            showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "5: Algunos de los campos ingresados no pudieron ser validados. Por favor, corrija la información e intente nuevamente");
                        }
                    }
                    else {

                        showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "numero de predio invalido ");

                    }
            };
            return {
                init: initPrivado
            }

    })(window);
        formSeccion2.init();

        var formRegistrarPersona = (function (window,undefined) {

            var init = function () {
                inscribeEventos();
                getTipoDocumentos();
                getTipoZona();
                getEstadoCivil();
            },
                inscribeEventos = function () {
                    $('#modalNuevaPersona').on('show.bs.modal', function () {
                        limpiaFormulario(this);
                        cargaCombos();
                    });
                    /*$('#modalNuevaPersona').on('hidden.bs.modal', function () {

                    });*/
                    $("#TipoDocumento").change(function () {
                        if ($("#TipoDocumento").val() == "1") {
                            $('#nombreDividido').show();
                            $('#nombreCompleto').hide();
                            $('#razonsocial2').removeAttr('required');
                            $('#razonsocial2').removeAttr('value');
                            $('#nombres').attr('required', '');
                            $('#apePat').attr('required', '');
                            $('#apeMat').attr('required', '');
                            $("#numdocumento").attr('data-smk-pattern', '[0-9]{8}');
                            $("#numdocumento").attr('minlength', '8');
                            $("#numdocumento").attr('maxlength', '8');
                        }
                        else {
                            if ($("#TipoDocumento").val() == "2") {
                                $('#nombreDividido').hide();
                                $('#nombreCompleto').show();
                                $('#razonsocial2').attr('required', '');
                                $('#nombres').removeAttr('required');
                                $('#apePat').removeAttr('required');
                                $('#apeMat').removeAttr('required');
                                $('#nombres').removeAttr('value');
                                $('#apePat').removeAttr('value');
                                $('#apeMat').removeAttr('value');
                                $("#numdocumento").attr('data-smk-pattern', '[0-9]{11}');
                                $("#numdocumento").attr('minlength', '11');
                                $("#numdocumento").attr('maxlength', '11');
                            }
                            else {
                                $('#nombreDividido').show();
                                $('#nombreCompleto').hide();
                                $('#razonsocial2').removeAttr('required');
                                $('#razonsocial2').removeAttr('value');
                                $('#nombres').attr('required', '');
                                $('#apePat').attr('required', '');
                                $('#apeMat').attr('required', '');
                                $("#numdocumento").removeAttr('data-smk-pattern');
                                $("#numdocumento").attr('minlength', '7');
                                $("#numdocumento").attr('maxlength', '15');
                            }
                        }
                    });
                    $("#numRUC").change(function () {
                        validaRUC();
                    });
                    $("#numdocumento").change(function () {
                        validaDocumentos();
                    });
                    $("#Departamento").change(function () {
                        $("#Distrito").empty();
                        $("#Distrito").append('<option value="">Seleccione un distrito</option>');
                        getProvincias($("#Departamento").val());
                        return false;
                    });
                    $("#Provincia").change(function () {
                        getDistrito($("#Departamento").val(), $("#Provincia").val());
                        return false;
                    });
                },
                limpiaFormulario = function (me) {
                    $(me).find('form')[0].reset();
                    $("#errorRUC").text("");
                    $('#datosNatural').show();
                    $('#datosJuridica').hide();
                    $('.cargando').hide();
                    $("#Provincia").empty();
                    $("#Provincia").append('<option value="">Seleccione una provincia</option>');
                    $("#Distrito").empty();
                    $("#Distrito").append('<option value="">Seleccione un distrito</option>');
                },
                cargaCombos = function () {
                    getDepartamentos();
                },
                validaDocumentos = function () {
                    limpiaDatosPersona();
                    switch ($("#TipoDocumento").val()) {
                        case "1": validaDNI(); break;
                        case "2": validaRUC2(); break;
                        default: break;
                    }

                },
                validaDNI = function () {
                    if ($("#numdocumento").val().length == 8) {
                        consultaBaseDatos("1", $("#numdocumento").val());
                    }
                },
                validaRUC = function () {
                    $("#errorRUC").text("");
                    if ($("#numRUC").val().length == 11) {
                        consultaBaseDatos("2", $("#numRUC").val());
                    }
                },
                validaRUC2 = function () {
                    if ($("#numdocumento").val().length == 11) {
                        consultaBaseDatos("2", $("#numdocumento").val());
                    }
                },
                showDatosJuridica = function () {
                    if ($('#EsJuridica').is(':checked')) {
                        $('#EsJuridica').val('true');

                        $('#datosNatural').hide();
                        $('#datosJuridica').show();

                        $('#numRUC').val('');
                        $('#numRUC').attr('required', '');
                        //$('#razonSoc').attr('required', '');
                        //$('#razonSoc').attr('readonly', true);


                        $('#razonsocial2').removeAttr('required');
                        $('#razonsocial2').removeAttr('value');
                        $('#TipoDocumento').removeAttr('required');
                        $('#numdocumento').removeAttr('required');
                        $('#numdocumento').removeAttr('value');
                        $('#nombres').removeAttr('required');
                        $('#nombres').removeAttr('value');
                        $('#apePat').removeAttr('required');
                        $('#apePat').removeAttr('value');
                        $('#apeMat').removeAttr('required');
                        $('#apeMat').removeAttr('value');
                    }
                    else {
                        $('#EsJuridica').val('false');

                        $('#datosJuridica').hide();
                        $('#datosNatural').show();

                        $('#numRUC').removeAttr('required');
                        $('#numRUC').removeAttr('value');
                        $('#razonSoc').removeAttr('required');
                        $('#razonSoc').removeAttr('value');
                        $('#razonsocial2').removeAttr('required');
                        $('#razonsocial2').removeAttr('value');
                        $('#TipoDocumento').attr('required', '');
                        $('#numdocumento').attr('required', '');
                        $('#numdocumento').val('');

                        $('#nombres').attr('required', '');
                        $('#apePat').attr('required', '');
                        $('#apeMat').attr('required', '');
                    }
                },
                consultaBaseDatos = function (tipo, numero) {
                    $('.cargando').show();
                    if (tipo == "1") {
                        $('#nombres').hide();
                    }
                    else if (tipo == "2") {
                        $('#razonSoc').hide();
                        $('#razonsocial2').hide();
                    }
                    $.ajax({
                        url: '@Url.Action("SearchTipoNumero", "Persona", new { area = "General" })',
                        data: "{ 'tipo': '" + tipo + "','numero': '" + numero + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (lista) {
                            $('.cargando').hide();
                            if (tipo == "1") {
                                $('#nombres').show();
                            }
                            else if (tipo == "2") {
                                $('#razonSoc').show();
                                $('#razonsocial2').show();
                            }
                            console.log(lista);
                            if (lista.length > 0) {
                                cargaDatosPersona(tipo, {
                                    nombres: lista[0].Nombres,
                                    apPaterno: lista[0].ApellidoPaterno,
                                    apMaterno: lista[0].ApellidoMaterno,
                                    razonSocial: lista[0].NombreCompleto,
                                    estadoCivil: lista[0].EstadoCivil,
                                    sexo: lista[0].Sexo,
                                    telefono: lista[0].Telefono,
                                    celular: lista[0].Celular,
                                    email: lista[0].Email,
                                    direccion: lista[0].Direccion,
                                    departamento: lista[0].Departamento,
                                    provincia: lista[0].Provincia,
                                    distrito: lista[0].Distrito,
                                    tipoZona: lista[0].TipoZona,
                                    zona: lista[0].Zona,
                                    id: lista[0].Id
                                });
                            }
                            else {
                                limpiaDatosPersona();
                                //if (tipo == "1") {
                                    //consultaRENIEC();
                                  //  limpiaDatosPersona();
                                //}
                                //else if (tipo == "2") {
                                    //consultaSUNAT();
                                //}
                            }
                            /*items = [];
                            map = {};
                            $.each(data, function (i, item) {
                                var id = item.Id;
                                var name = item.NombreCompleto + ' - ' + item.Documento;
                                map[name] = { id: id, name: name };
                                items.push(name);
                            });
                            response(items);
                            $(".dropdown-menu").css("height", "auto");*/
                        },
                        error: function (response) {
                            console.log("algo ocurrió");
                        },
                        failure: function (response) {
                            console.log("algo ocurrió");
                        }
                    });
                },
                limpiaDatosPersona = function (me) {
                    idPersona = 0;
                    $("#nombres").val("");
                    $("#apePat").val("");
                    $("#apeMat").val("");
                    $("#EstadoCivil").val("");
                    $("#razonSoc").val("");

                    $.each(jQuery("input[name='Sexo']"), function (index, control) {
                            control.checked = false;
                    });
                    $("#telFijo").val("");
                    $("#telCel").val("");
                    $("#email").val("");
                    $("#direccion").val("");
                    $("#Departamento").val("");
                    $("#Provincia").empty();
                    $("#Provincia").append('<option value="">Seleccione una provincia</option>');
                    $("#Distrito").empty();
                    $("#Distrito").append('<option value="">Seleccione un distrito</option>');
                    $("#TipoZona").val("");
                    $("#caserio").val("");
                },
                cargaDatosPersona = function (tipo, persona) {
                    if (tipo == "1") {
                        $("#nombres").val(persona.nombres);
                        $("#apePat").val(persona.apPaterno);
                        $("#apeMat").val(persona.apMaterno);
                        $("#EstadoCivil").val(persona.estadoCivil);
                        $.each(jQuery("input[name='Sexo']"), function (index, control) {
                            if (control.value == persona.sexo.substr(0, 1)) {
                                control.checked = true;
                            }
                            else {
                                control.checked = false;
                            }
                        });
                        $("#telFijo").val(persona.telefono);
                        $("#telCel").val(persona.celular);
                        $("#email").val(persona.email);
                        $("#direccion").val(persona.direccion);
                        $("#Departamento").val(persona.departamento);
                        //$("#fechareg").val("2015-11-02");
                        getProvincias(persona.departamento, persona.provincia);
                        getDistrito(persona.departamento, persona.provincia, persona.distrito);
                        $("#TipoZona").val(persona.tipoZona);
                        $("#caserio").val(persona.zona);
                        idPersona = persona.id;

                    } else if (tipo == "2") {
                        $("#razonSoc").val(persona.razonSocial);
                        $("#razonsocial2").val(persona.razonSocial);
                        $("#direccion").val(persona.direccion);
                        $("#telFijo").val(persona.telefono);
                        $("#telCel").val(persona.celular);
                        $("#email").val(persona.email);
                        $("#Departamento").val(persona.departamento);
                        getProvincias(persona.departamento, persona.provincia);
                        getDistrito(persona.departamento, persona.provincia, persona.distrito);
                        $("#TipoZona").val(persona.tipoZona);
                        $("#caserio").val(persona.zona);
                        idPersona = persona.id;
                    }
                },
                consultaRENIEC = function () {

                    //var tecactusApi = new TecactusApi("z6dVrHtt8drFbeFuRotoxNJm6Am70WvDxWVpVOWB");//serfor
                    var tecactusApi = new TecactusApi("l5oGHKdq6DcN4SdO0M11oo1YVWheEIjU990mU9Yd");//gmail
                    $('.cargando').show();
                    $('#nombres').hide();
                    tecactusApi.Reniec.getDni($("#numdocumento").val())
                        .then(function (response) {
                            $('#nombres').show()
                            $('.cargando').hide();
                            if (jQuery.type(response.data) === "object") {
                                $("#errorDNI").text("");
                                $("#nombres").val(response.data.nombres);
                                $("#apePat").val(response.data.apellido_paterno);
                                $("#apeMat").val(response.data.apellido_materno);
                            }
                            else {
                                $("#errorDNI").text(response.data);
                                $("#nombres").val("");
                                $("#apePat").val("");
                                $("#apeMat").val("");
                            }
                        })
                        .catch(function (response) {
                            $('#nombres').show()
                            $('.cargando').hide();
                            $("#nombres").val("");
                            $("#apePat").val("");
                            $("#apeMat").val("");
                            console.log("algo ocurrió")
                            console.log("código de error: " + response.code)
                            console.log("mensaje de respuesta: " + response.status)
                            console.log(response.data)
                        });
                },
                consultaSUNAT = function () {
                    $('.cargando').show();
                    $('#razonSoc').hide();
                    var jsonenvio =
                        {
                            "ruc": $("#numRUC").val() || $("#numdocumento").val()
                        };
                    $.ajax({
                        url: '@Url.Action("GetEmpresaSUNAT", "Plantacion", new { area = "Plantaciones" })',
                        data: JSON.stringify(jsonenvio),
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (result) {
                            $('#razonSoc').show()
                            $('.cargando').hide();
                            if (result.success) {
                                $("#errorRUC").text("");
                                $("#razonSoc").val(result.data.RazonSocial);
                                $("#razonsocial2").val(result.data.RazonSocial);
                                $("#direccion").val(result.data.Direccion);
                            }
                            else {
                                $("#errorRUC").text(result.responseText);
                                $("#razonSoc").val("");
                                $("#razonsocial2").val("");
                                $("#direccion").val("");
                            }
                        },
                        error: function (ex) {
                            $('#razonSoc').show();
                            $('.cargando').hide();
                            $("#razonSoc").val("");
                            $("#razonsocial2").val("");
                            $("#direccion").val("");
                            console.log("algo ocurrió")
                            //console.log("código de error: " + response.code)
                            console.log("mensaje de respuesta: " + result.status)
                            console.log(result.responseText);
                        }
                    });

                },
                insertFormPersona = function () {
                    if ($('#formRegPersona').smkValidate()) {

                        var form = $("#formRegPersona").serialize();
                        form = form + "&id=" + idPersona;
                        form = form + "&EsTitular=" + ($("input[name='rol']:checked").val()=='T')
                        $.ajax({
                            async: true,
                            type: 'POST',
                            url: '@Url.Action("Register", "Persona", new { area = "General" })',
                            data: form,
                            dataType: 'json',
                            success: function (result) {
                                if (result != null && result.success) {
                                    showNotification(constantes.tipoAlerta.SUCCESS, "¡En hora Buena!", "Los datos de la persona se grabaron correctamente. ");
                                    $('#formRegPersona').smkClear();
                                    loadItemRowPersona(result.innerId);
                                    $('#modalNuevaPersona').modal('hide');
                                }
                                else {
                                    showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!",
                                        "Ocurrió un error al intentar registrar los datos de la persona. Por favor verifique la información ingresada y el siguiente mensaje: " + result.responseText);
                                }
                            },
                            error: function (ex) {
                                showNotification(constantes.tipoAlerta.DANGER, "¡Error del sistema!",
                                    "No se pudo conectar con el servicio solicitado: " + ex);
                            }
                        });
                    }
                    else {
                        showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "6: Algunos de los campos ingresados no pudieron ser validados.");
                    }
                },
                getDepartamentos = function () {
                    $("#Departamento").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetDepartamentos", "Ubigeo", new { area = "General" })',
                        dataType: 'json',
                        data: {},
                        success: function (departamentos) {
                            $.each(departamentos, function (i, departamento) {
                                $("#Departamento").append('<option value="' + departamento.Value + '">' + departamento.Text + '</option>');
                            });

                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar el listado de departamentos. " + ex);
                        }

                    });
                },
                getProvincias = function (codDep, codProv = "") {
                    $("#Provincia").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetProvincias", "Ubigeo", new { area = "General" })',
                        dataType: 'json',
                        data: { codigoDep: codDep },
                        success: function (provincias) {
                            $.each(provincias, function (i, provincia) {
                                $("#Provincia").append('<option value="' + provincia.Value + '">' + provincia.Text + '</option>');
                            });
                            if (codProv != "") $("#Provincia").val(codProv);
                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar el listado de provincias. " + ex);
                        }
                    });
                },
                getDistrito = function (codDep, codProv, codDst = "") {
                    $("#Distrito").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetDistritos", "Ubigeo", new { area = "General" })',
                        dataType: 'json',
                        data: { codigoDep: codDep, codigoProv: codProv },
                        success: function (distritos) {
                            $.each(distritos, function (i, distrito) {
                                $("#Distrito").append('<option value="' + distrito.Value + '">' + distrito.Text + '</option>');
                            });
                            if (codDst != "") $("#Distrito").val(codDst);
                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar el listado de provincias. " + ex);
                        }
                    });
                },
                getTipoDocumentos = function () {
                    $("#TipoDocumento").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetTiposDocumento", "DatosTipo", new { area = "General" })',
                        dataType: 'json',
                        data: {},
                        success: function (tiposDocumento) {
                            $.each(tiposDocumento, function (i, tipo) {
                                $("#TipoDocumento").append('<option value="' + tipo.Value + '">' + tipo.Text + '</option>');
                            });
                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar los tipos de documento." + ex)
                        }

                    });
                },
                getTipoZona = function () {
                    $("#TipoZona").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetTiposZona", "DatosTipo", new { area = "General" })',
                        dataType: 'json',
                        data: {},
                        success: function (tiposZona) {

                            $.each(tiposZona, function (i, tipo) {
                                $("#TipoZona").append('<option value="' + tipo.Value + '">' + tipo.Text + '</option>');
                            });
                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar los tipos de zona." + ex)
                        }

                    });
                },
                getEstadoCivil = function () {
                    $("#EstadoCivil").empty();
                    $.ajax({
                        async: true,
                        type: 'POST',
                        url: '@Url.Action("GetEstadosCivil", "DatosTipo", new { area = "General" })',
                        dataType: 'json',
                        data: {},
                        success: function (estadosCivil) {

                            $.each(estadosCivil, function (i, estado) {
                                $("#EstadoCivil").append('<option value="' + estado.Value + '">' + estado.Text + '</option>');
                            });
                        },
                        error: function (ex) {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar los estados civiles." + ex)
                        }

                    });
                };
            return {
                init: init,
                insertFormPersona: insertFormPersona,
                showDatosJuridica: showDatosJuridica
            }

        })(window);
       formRegistrarPersona.init();


       var formDetCollection = (function (window, undefined) {

           var init = function () {
               inscribeEventos();
               getSistemaCoordenadas();
               getSistemaPlantacion();
               getFines();
           },
               inscribeEventos = function () {
                   $('#modalDetallePlantacion').on('show.bs.modal', function () {
                       $("#Section3IdBloque").val("0");
                       limpiaFormulario(this);
                       $("#campo_area").show();
                       $("#campo_linea").hide();
                   });
                   $('#grabarColeccion1').click(function () {
                       if ($('#Section3IdBloque').val() == "0") {

                           insertFormColeccion();
                       }
                       else {
                           updateFormColeccion();
                       }
                       return false;
                   });
                   $('#SistemaCoordenadas').change(function () {
                       var rspta = validaSelRequerido($('#SistemaCoordenadas'), $('#SistemaCoordenadas').val());
                       if (rspta) {
                           var latmin = parseFloat($('#SistemaCoordenadas').find(":selected").attr('data-latitudmin'));
                           var latmax = parseFloat($('#SistemaCoordenadas').find(":selected").attr('data-latitudmax'));
                           $("#Section3IdBloque").val("0");
                           $("#Section3IdBloque").val("0");
                           var lat = parseFloat($('#CoordenadaNorteBloque').val());
                           validaRango($('#CoordenadaNorteBloque'), lat, latmin, latmax);
                           var lonmin = parseFloat($('#SistemaCoordenadas').find(":selected").attr('data-longitudmin'));
                           var lonmax = parseFloat($('#SistemaCoordenadas').find(":selected").attr('data-longitudmax'));
                           var lon = parseInt($('#CoordenadaEsteBloque').val());
                           validaRango($('#CoordenadaEsteBloque'), lon, lonmin, lonmax);
                       }
                       else {
                           $('#CoordenadaEsteBloque').parent().removeClass("has-feedback has-error");
                           $('#CoordenadaEsteBloque').parent().find("span").html('');
                           $('#CoordenadaEsteBloque').parent().find("span").hide();
                           $('#CoordenadaNorteBloque').parent().removeClass("has-feedback has-error");
                           $('#CoordenadaNorteBloque').parent().find("span").html('');
                           $('#CoordenadaNorteBloque').parent().find("span").hide();
                       }
                      /* $('#CoordenadaEsteBloque').parent().find('span').remove();
                       $('#CoordenadaNorteBloque').parent().find('span').remove();
                       var latmin = $('#SistemaCoordenadas').find(":selected").attr('data-latitudmin');
                       var latmax = $('#SistemaCoordenadas').find(":selected").attr('data-latitudmax');
                       var lonmin = $('#SistemaCoordenadas').find(":selected").attr('data-longitudmin');
                       var lonmax = $('#SistemaCoordenadas').find(":selected").attr('data-longitudmax');

                       if (latmin > 0 && lonmin > 0) {
                           $('#CoordenadaEsteBloque').after("<span class='help-block errorDerecha' >Debe ser mayor a <b> " + latmin + " </b> y menor a <b> " + latmax + " </b></span>");
                           $('#CoordenadaNorteBloque').after("<span class='help-block errorDerecha' >Debe ser mayor a <b> " + lonmin + " </b> y menor a <b> " + lonmax + " </b></span>");
                           $('#CoordenadaEsteBloque').parent().find('span').hide();
                           $('#CoordenadaNorteBloque').parent().find('span').hide();
                       }*/
                       return false;
                   });
                   $('#NombreBloque').blur(function () {
                       validaRequerido($('#NombreBloque'), $('#NombreBloque').val());
                   });
                   $('#MesBloque').change(function () {
                       validaSelRequerido($('#MesBloque'), $('#MesBloque').val());
                   });
                   $('#AnnioBloque').change(function () {
                       validaRango($('#AnnioBloque'), $('#AnnioBloque').val(),1950,2050);
                   });
                   $('#CoordenadaNorteBloque').blur(function () {
                       if ($('#SistemaCoordenadas').find(":selected").val() > 0) {
                           var latmin = parseFloat($('#SistemaCoordenadas').find(":selected").attr('data-latitudmin'));
                           var latmax = parseFloat($('#SistemaCoordenadas').find(":selected").attr('data-latitudmax'));
                           var lat = parseFloat($('#CoordenadaNorteBloque').val());
                           validaRango($('#CoordenadaNorteBloque'), lat, latmin, latmax);
                       }
                   });
                   $('#CoordenadaEsteBloque').blur(function () {
                       if ($('#SistemaCoordenadas').find(":selected").val() > 0) {
                           var lonmin = parseFloat($('#SistemaCoordenadas').find(":selected").attr('data-longitudmin'));
                           var lonmax = parseFloat($('#SistemaCoordenadas').find(":selected").attr('data-longitudmax'));
                           var lon = parseInt($('#CoordenadaEsteBloque').val());
                           validaRango($('#CoordenadaEsteBloque'), lon, lonmin, lonmax);
                       }
                   });
                   $('#TipoPlantacion').change(function () {
                       if (validaSelRequerido($('#TipoPlantacion'), $('#TipoPlantacion').val())) {
                           $('#Section3TipoPlantacionDesc').val($('#TipoPlantacion option:selected').text());
                           $('#Section3TipoSistemaHidden').val($('#TipoPlantacion option:selected').attr('data-tipo'));
                           if ($('#Section3TipoSistemaHidden').val() == "L") {
                               $('#campo_linea').show();
                               $('#campo_area').hide();
                           }
                           else {
                               $('#campo_area').show();
                               $('#campo_linea').hide();
                           }
                        }
                   });
                   $('#CantidadSuperficieHa').blur(function () {
                       if ($('#Section3TipoSistemaHidden').val() == "A") {
                           //validaNumMayorQue($('#CantidadSuperficieHa'), $('#CantidadSuperficieHa').val(), 0);
                           console.log("Entro?");
                           console.log($('#AreaPredio').val());
                           validaMenorIgualyMayorQue($('#CantidadSuperficieHa'), $('#CantidadSuperficieHa').val(), 0, $('#CantidadArea').val() - Number($('#badgeTotalArea').text()));
                       }
                   });
                   $('#CantidadSuperficieMl').blur(function () {
                       if ($('#Section3TipoSistemaHidden').val() == "L") {
                           validaNumMayorQue($('#CantidadSuperficieMl'), $('#CantidadSuperficieMl').val(), 0);
                       }
                   });
                   $('#FinalidadProducto').change(function () {
                       if(validaSelRequerido($('#FinalidadProducto'), $('#FinalidadProducto').val())){
                            $('#Section3Fines').val($('#FinalidadProducto option:selected').text());
                        }
                   });
                   $("#searchEspecie").typeahead({
                       minLength: 4,
                       delay: 500,
                       source: function (request, response) {
                           $.ajax({
                               url: '@Url.Action("Search", "Especie",new { area="General"})',
                               data: "{ 'texto': '" + request + "'}",
                               dataType: "json",
                               type: "POST",
                               contentType: "application/json; charset=utf-8",
                               success: function (data) {
                                   items = [];
                                   map = {};
                                   $.each(data, function (i, item) {
                                       var id = item.Id;
                                       //var name = item.NombreCientifico + ' - ' + item.NombreComun + ' (Familia: ' + item.NombreFamilia + ')';
                                       var name = item.NombreConsultado + ' ( Cód.' + item.Id + ')';
                                       var nameC = item.NombreComun;
                                       var nameS = item.Nombre;
                                       map[name] = { id: id, name: name, common: nameC, scientist: nameS };
                                       items.push(name);
                                   });
                                   response(items);
                                   $(".dropdown-menu").css("height", "auto");
                               },
                               error: function (response) {
                                   alert(response.responseText);
                               },
                               failure: function (response) {
                                   alert(response.responseText);
                               }
                           });
                       },
                       updater: function (item) {
                           $("#NombreComun").val(map[item].common);
                           $("#NombreCientifico").val(map[item].scientist);
                           $("#Especie_Id").val(map[item].id);
                           return item;
                       }
                   });
               },
               limpiaFormulario = function (me) {
                   $(me).find('form')[0].reset();
               },
               getSistemaCoordenadas = function () {
                   $("#SistemaCoordenadas").empty();
                   $.ajax({
                       async: true,
                       type: 'POST',
                       url: '@Url.Action("GetSistemaCoordenadas")',
                       dataType: 'json',
                       data: {},
                       success: function (sistemas) {
                           $.each(sistemas, function (i, sistema) {
                               $("#SistemaCoordenadas").append('<option value="' + sistema.Value + '" data-latitudmin="' + sistema.dataLatitudMin + '" data-latitudmax="' + sistema.dataLatitudMax + '" data-longitudmin="' + sistema.dataLongitudMin + '" data-longitudmax="' + sistema.dataLongitudMax + '" >' + sistema.Text + '</option>');
                           });
                       },
                       error: function (ex) {
                           showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar los sistemas de coordenadas." + ex)
                       }

                   });
               },
               getSistemaPlantacion = function () {
                   $("#TipoPlantacion").empty();
                   $.ajax({
                       async: true,
                       type: 'POST',
                       url: '@Url.Action("GetSistemasPlantacion")',
                       dataType: 'json',
                       data: {},
                       success: function (sistemas) {
                           $.each(sistemas, function (i, sistema) {
                               $("#TipoPlantacion").append('<option value="' + sistema.Id + '" data-tipo="' + sistema.Tipo + '">' + sistema.Descripcion + '</option>');
                           });
                       },
                       error: function (ex) {
                           showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar los sistemas de plantación." + ex)
                       }

                   });
               },
               getFines = function () {
                   $("#FinalidadProducto").empty();
                   $.ajax({
                       async: true,
                       type: 'POST',
                       url: '@Url.Action("GetFinalidadProducto")',
                       dataType: 'json',
                       data: {},
                       success: function (finalidad) {
                           $.each(finalidad, function (i, fin) {
                               $("#FinalidadProducto").append('<option value="' + fin.Value + '">' + fin.Text + '</option>');
                           });

                       },
                       error: function (ex) {
                           showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar los fines del producto." + ex)
                       }

                   });
               },
               validaForm = function () {
                   //Valida Nombre del Predio
                   var val1 = validaRequerido($('#NombreBloque'), $('#NombreBloque').val());
                   //Valida Selección de Mes
                   var val2 = validaSelRequerido($('#MesBloque'), $('#MesBloque').val());
                   //Valida Rango de años
                   var val3 = validaRango($('#AnnioBloque'), $('#AnnioBloque').val(), 1950, 2050);
                   //Valida selección del Sistema de Coordenada
                   var val4 = validaSelRequerido($('#SistemaCoordenadas'), $('#SistemaCoordenadas').val());
                   //Valida Latitud - Coordenada
                   var valor1 = true;
                   if ($('#SistemaCoordenadas').find(":selected").val() > 0) {
                       var latmin = parseFloat($('#SistemaCoordenadas').find(":selected").attr('data-latitudmin'));
                       $('#Section3LatMin').val(latmin);
                       var latmax = parseFloat($('#SistemaCoordenadas').find(":selected").attr('data-latitudmax'));
                       $('#Section3LatMax').val(latmax);
                       var lat = parseFloat($('#CoordenadaNorteBloque').val());
                       valor1 = validaRango($('#CoordenadaNorteBloque'), lat, latmin, latmax);
                   }
                   //Valida Longitud - Coordenada
                   var valor2 = true;
                   if ($('#SistemaCoordenadas').find(":selected").val() > 0) {
                       var lonmin = parseFloat($('#SistemaCoordenadas').find(":selected").attr('data-longitudmin'));
                       $('#Section3LonMin').val(lonmin);
                       var lonmax = parseFloat($('#SistemaCoordenadas').find(":selected").attr('data-longitudmax'));
                       $('#Section3LonMax').val(lonmax);
                       var lon = parseFloat($('#CoordenadaEsteBloque').val());
                       valor2 = validaRango($('#CoordenadaEsteBloque'), lon, lonmin, lonmax);
                   }
                   var val5 = validaSelRequerido($('#TipoPlantacion'), $('#TipoPlantacion').val());
                   var val6=true;
                   if ($('#Section3TipoSistemaHidden').val() == "A") {
                       val6 = validaMenorIgualyMayorQue($('#CantidadSuperficieHa'), $('#CantidadSuperficieHa').val(), 0, $('#AreaPredio').val() - Number($('#badgeTotalArea').text()));
                       console.log(Number($('#badgeTotalArea').text()));
                   }
                   if ($('#Section3TipoSistemaHidden').val() == "L") {
                       val6 = validaNumMayorQue($('#CantidadSuperficieMl'), $('#CantidadSuperficieMl').val(), 0);
                   }
                   var val7 = validaSelRequerido($('#FinalidadProducto'), $('#FinalidadProducto').val());


                   return val1 && val2 && val3 && val4 && valor1 && valor2 && val5 && val6 && val7;
               },
               validaRequerido = function (objeto, valor) {
                   if (valor.length > 0) {
                       objeto.parent().removeClass("has-feedback has-error");
                       objeto.parent().find("span").html('');
                       objeto.parent().find("span").hide();
                       return true;
                   }
                   else {
                       objeto.parent().addClass("has-feedback has-error");
                       objeto.parent().find("span").html('Valor es requerido');
                       objeto.parent().find("span").show();
                       return false;
                   }
               },
               validaSelRequerido = function (objeto, valor) {
                   if (valor > 0) {
                       objeto.parent().removeClass("has-feedback has-error");
                       objeto.parent().find("span").html('');
                       objeto.parent().find("span").hide();
                       return true;
                   }
                   else {
                       objeto.parent().addClass("has-feedback has-error");
                       objeto.parent().find("span").html('Valor es requerido');
                       objeto.parent().find("span").show();
                       return false;
                   }
               },
               validaRango = function (objeto, valor, minimo, maximo){
                   if (valor >= minimo && valor <= maximo) {
                       objeto.parent().removeClass("has-feedback has-error");
                       objeto.parent().find("span").html('');
                       objeto.parent().find("span").hide();
                       return true;
                   }
                   else {
                       objeto.parent().addClass("has-feedback has-error");
                       objeto.parent().find("span").html('Valor entre ' + minimo + ' y ' + maximo);
                       objeto.parent().find("span").show();
                       return false;
                   }
               },
               validaMenorIgualyMayorQue = function (objeto, valor, minimo, maximo) {
                   if (valor > minimo && valor <= maximo) {
                       objeto.parent().removeClass("has-feedback has-error");
                       objeto.parent().find("span").html('');
                       objeto.parent().find("span").hide();
                       return true;
                   }
                   else {
                       //objeto.parent().addClass("has-feedback has-error");
                       //objeto.parent().find("span").html('Debe ser mayor que ' + minimo + ' y menor igual que ' + maximo);
                       //objeto.parent().find("span").show();
                       return true;
                   }
                   //else {
                       //objeto.parent().addClass("has-feedback has-error");
                       //objeto.parent().find("span").html('Debe ser mayor que ' + minimo + ' y menor igual que ' + maximo);
                       //objeto.parent().find("span").show();
                       //return false;
                   //}
               },
               validaNumMayorQue = function (objeto, valor, minimo) {
                   if (valor > minimo) {
                       objeto.parent().removeClass("has-feedback has-error");
                       objeto.parent().find("span").html('');
                       objeto.parent().find("span").hide();
                       return true;
                   }
                   else {
                       objeto.parent().addClass("has-feedback has-error");
                       objeto.parent().find("span").html('Valor debe ser mayor que ' + minimo);
                       objeto.parent().find("span").show();
                       return false;
                   }
               },
               insertFormColeccion = function () {
                   //if ($('#formRegDetalle').smkValidate()) {
                       if (validaForm()) {
                           var form = $("#formRegDetalle").serialize();
                           $.ajax({
                               async: false,
                               method: "POST",
                               url: '@Url.Action("_ItemBloque", "Plantacion", new { area = "Plantaciones" })',
                               data: form,
                               cache: false,
                               success: function (data) {
                                   console.log(data);
                                   $('#detalleListBody').append(data);
                                   $('#modalDetallePlantacion').modal('hide');
                                   $badge = $('#badgeDetallesTab');
                                   $badge2 = $('#badgeDetallesList');

                                   count = Number($badge.text());
                                   $badge.text(count + 1);
                                   $badge2.text(count + 1);
                                   formDetEspecie.getBloques();
                               },
                               error: function (ex) {
                                   showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar registrar el bloque." + ex);
                               }
                           });
                       }
                       else {
                           showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "Las coordenadas están fuera del rango permitido");
                       }
                   //}
                  // else {
                  //     showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "7: Algunos de los campos ingresados no pudieron ser validados.");
                  // }
               },
               updateFormColeccion = function () {
                   //if ($('#formRegDetalle').smkValidate()) {
                       if (validaForm()) {
                           var form = $("#formRegDetalle").serialize();
                           $.ajax({
                               async: true,
                               method: "POST",
                               url: '@Url.Action("_UpdateBloque", "Plantacion", new { area = "Plantaciones" })',
                               data: form,
                               cache: false,
                               success: function (data) {
                                   $('#detalleListBody').append(data);
                                   $('#modalDetallePlantacion').modal('hide');
                                   formDetEspecie.getBloques();
                               },
                               error: function (ex) {
                                   showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar actualizar el bloque." + ex);
                               }
                           });
                       }
                       else {
                           showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "Las coordenadas están fuera del rango permitido");
                       }
                   //}
                  // else {
                  //     showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "8: Algunos de los campos ingresados no pudieron ser validados.");
                  // }
               };

           return {
               init: init
           }
    })(window);
        formDetCollection.init();

















        var formDetEspecie = (function (window, undefined) {

           var init = function () {
               inscribeEventos2();
               getTipoPlantado();
               getUnidad();
               getBloques();
           },
               inscribeEventos2 = function () {
                   $('#modalDetalleEspecies').on('show.bs.modal', function () {
                       $("#Section8IdEspecie").val("0");
                       limpiaFormulario2(this);
                   });
                   $("#searchEspecie").typeahead({
                       minLength: 4,
                       delay: 500,
                       source: function (request, response) {
                           $.ajax({
                               url: '@Url.Action("Search", "Especie",new { area="General"})',
                               data: "{ 'texto': '" + request + "'}",
                               dataType: "json",
                               type: "POST",
                               contentType: "application/json; charset=utf-8",
                               success: function (data) {
                                   items = [];
                                   map = {};
                                   $.each(data, function (i, item) {
                                       var id = item.Id;
                                       var name = item.NombreConsultado + ' ( Cód.' + item.Id + ')';
                                       var nameC = item.NombreComun;
                                       var nameS = item.Nombre;
                                       map[name] = { id: id, name: name, common: nameC, scientist: nameS };
                                       items.push(name);
                                   });
                                   response(items);
                                   $(".dropdown-menu").css("height", "auto");
                               },
                               error: function (response) {
                                   alert(response.responseText);
                               },
                               failure: function (response) {
                                   alert(response.responseText);
                               }
                           });
                       },
                       updater: function (item) {
                           $("#NombreComun").val(map[item].common);
                           $("#NombreCientifico").val(map[item].scientist);
                           $("#Especie_Id").val(map[item].id);
                           return item;
                       }
                   });
                   $('#NombreComun').blur(function () {
                       validaRequerido2($('#NombreComun'), $('#NombreComun').val());
                   });
                   $('#TotalPlantado').blur(function () {
                       validaNumMayorQue2($('#TotalPlantado'), $('#TotalPlantado').val(), 0);
                   });
                   $('#TipoPlantado').change(function () {
                       validaSelRequerido3($('#TipoPlantado'), $('#TipoPlantado').val());
                       $('#TipoPlantadoDesc').val($('#TipoPlantado option:selected').text());
                   });
                   $('#ProduccionEstimada').blur(function () {
                       validaNumMayorQue2($('#ProduccionEstimada'), $('#ProduccionEstimada').val(), 0);
                   });
                   $('#Especie_Id').change(function () {
                       validaSelRequerido2($('#Especie_Id'), $('#Especie_Id').val());
                   });
                   $('#UnidadMedida').change(function () {
                       validaSelRequerido2($('#UnidadMedida'), $('#UnidadMedida').val());
                       $('#UnidadMedidaSimbolo').val($('#UnidadMedida option:selected').text());
                   });
                   $('#BloqueAsig').change(function () {
                       validaSelRequerido2($('#BloqueAsig'), $('#BloqueAsig').val());
                       $('#BloqueAsigDesc').val($('#BloqueAsig option:selected').text());
                   });
                   $('#grabarColeccion2').click(function () {
                       if ($('#Section8IdEspecie').val() == "0") {

                           insertFormEspecie();
                       }
                       else {
                           updateFormEspecie();
                       }
                       return false;
                   });
               },
               limpiaFormulario2 = function (me) {
                   $(me).find('form')[0].reset();
                   $('#Especie_Id').val('0');
               },
               getTipoPlantado = function () {
                   $("#TipoPlantado").empty();
                   $.ajax({
                       async: true,
                       type: 'POST',
                       url: '@Url.Action("GetTipoPlantado")',
                       dataType: 'json',
                       data: {},
                       success: function (tipos) {
                           $.each(tipos, function (i, tipo) {
                               $("#TipoPlantado").append('<option value="' + tipo.Value + '">' + tipo.Text + '</option>');
                           });
                           if ($('input#TipoPlantadoHidden').val().trim() != "") $("#TipoPlantado").val($('input#TipoPlantadoHidden').val());
                       },
                       error: function (ex) {
                           showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar los tipos de plantado." + ex)
                       }

                   });
               },
               getUnidad = function () {
                   $("#UnidadMedida").empty();
                   $.ajax({
                       async: true,
                       type: 'POST',
                       url: '@Url.Action("GetUnidadesMedida", "DatosTipo", new { area = "General" })',
                       dataType: 'json',
                       data: {},
                       success: function (unidadesMedida) {
                           $.each(unidadesMedida, function (i, unidad) {
                               $("#UnidadMedida").append('<option value="' + unidad.Value + '">' + unidad.Text + '</option>');
                           });

                           if ($('input#UnidadMedidaHidden').val().trim() != "") $("#UnidadMedida").val($('input#UnidadMedidaHidden').val());
                       },
                       error: function (ex) {
                           showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar las unidades de medida." + ex)
                       }

                   });
               },
               getBloques = function () {
                   $("#BloqueAsig").empty();
                   var idplant = $("input[id=Section3Id]").val();
                   $.ajax({
                       async: true,
                       type: 'POST',
                       url: '@Url.Action("GetBloques")',
                       dataType: 'json',
                       data: { id : idplant },
                       success: function (bloques) {
                           var total1 = 0;
                           var total2 = 0;
                           $.each(bloques, function (i, bloque) {
                               $("#BloqueAsig").append('<option value="' + bloque.Id + '">' + bloque.Nombre + '</option>');
                               total1 = total1 + bloque.CantidadSuperficieHa;
                               total2 = total2 + bloque.CantidadSuperficieMl;
                           });
                           $('#badgeTotalArea').text(total1);
                           $('#badgeTotalLinea').text(total2);
                           if ($('input#BloqueAsigHidden').val().trim() != "") $("#BloqueAsig").val($('input#BloqueAsigHidden').val());
                       },
                       error: function (ex) {
                           showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Error al intentar cargar los bloques." + ex)
                       }

                   });
               },
               validaForm2 = function () {
                   var val0 = validaSelRequerido2($('#Especie_Id'), $('#Especie_Id').val());
                   var val1 = validaRequerido2($('#NombreComun'), $('#NombreComun').val());
                   var val2 = validaNumMayorQue2($('#ProduccionEstimada'), $('#ProduccionEstimada').val(), 0);
                   var val3 = validaNumMayorQue2($('#TotalPlantado'), $('#TotalPlantado').val(), 0);
                   var val4 = validaSelRequerido3($('#TipoPlantado'), $('#TipoPlantado').val());
                   var val5 = validaSelRequerido2($('#UnidadMedida'), $('#UnidadMedida').val());
                   var val6 = validaSelRequerido2($('#BloqueAsig'), $('#BloqueAsig').val());

                   return val0 && val1 && val2 && val3 && val4 && val5 && val6;
               },
               validaRequerido2 = function (objeto, valor) {
                   if (valor.length > 0) {
                       objeto.parent().removeClass("has-feedback has-error");
                       objeto.parent().find("span").html('');
                       objeto.parent().find("span").hide();
                       return true;
                   }
                   else {
                       objeto.parent().addClass("has-feedback has-error");
                       objeto.parent().find("span").html('Valor es requerido');
                       objeto.parent().find("span").show();
                       return false;
                   }
               },
               validaSelRequerido2 = function (objeto, valor) {

                   if (valor > 0) {
                       objeto.parent().removeClass("has-feedback has-error");
                       objeto.parent().find("span").html('');
                       objeto.parent().find("span").hide();
                       return true;
                   }
                   else {
                       objeto.parent().addClass("has-feedback has-error");
                       objeto.parent().find("span").html('Valor es requerido');
                       objeto.parent().find("span").show();
                       return false;
                   }
               },
               validaSelRequerido3 = function (objeto, valor) {

                   if (valor !='') {
                       objeto.parent().removeClass("has-feedback has-error");
                       objeto.parent().find("span").html('');
                       objeto.parent().find("span").hide();
                       return true;
                   }
                   else {
                       objeto.parent().addClass("has-feedback has-error");
                       objeto.parent().find("span").html('Valor es requerido');
                       objeto.parent().find("span").show();
                       return false;
                   }
               },
               validaNumMayorQue2 = function (objeto, valor, minimo) {
                   if (valor > minimo) {
                       objeto.parent().removeClass("has-feedback has-error");
                       objeto.parent().find("span").html('');
                       objeto.parent().find("span").hide();
                       return true;
                   }
                   else {
                       objeto.parent().addClass("has-feedback has-error");
                       objeto.parent().find("span").html('Valor debe ser mayor que ' + minimo);
                       objeto.parent().find("span").show();
                       return false;
                   }
               },
               insertFormEspecie = function () {
                   //if ($('#formRegDetalle').smkValidate()) {
                       if (validaForm2()) {
                           var form = $("#formRegEspecie").serialize();
                           $.ajax({
                               async: false,
                               method: "POST",
                               url: '@Url.Action("_ItemEspecie", "Plantacion", new { area = "Plantaciones" })',
                               data: form,
                               cache: false,
                               success: function (data) {
                                   $('#especieListBody').append(data);
                                   $('#modalDetalleEspecies').modal('hide');
                                   $badge = $('#badgeEspeciesTab');
                                   $badge2 = $('#badgeEspeciesList');
                                   count = Number($badge.text());
                                   $badge.text(count + 1);
                                   $badge2.text(count + 1);
                               },
                               error: function (ex) {
                                   showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar registrar una especie para el bloque." + ex);
                               }
                           });
                       }
                       else {
                           showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "Existe datos no validos!!");
                       }
                   //}
                  // else {
                  //     showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "9: Algunos de los campos ingresados no pudieron ser validados.");
                  // }
               },
               updateFormEspecie = function () {
                   //if ($('#formRegDetalle').smkValidate()) {
                       if (validaForm2()) {
                           var form = $("#formRegEspecie").serialize();
                           $.ajax({
                               async: true,
                               method: "POST",
                               url: '@Url.Action("_UpdateEspecie", "Plantacion", new { area = "Plantaciones" })',
                               data: form,
                               cache: false,
                               success: function (data) {
                                   $('#especieListBody').append(data);
                                   $('#modalDetalleEspecies').modal('hide');
                               },
                               error: function (ex) {
                                   showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar actualizar la especie del bloque." + ex);
                               }
                           });
                       }
                       else {
                           showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "Las coordenadas están fuera del rango permitido");
                       }
                   //}
                  // else {
                  //     showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "10: Algunos de los campos ingresados no pudieron ser validados.");
                  // }
               };

           return {
               init: init,
               getBloques: getBloques
           }
    })(window);
        formDetEspecie.init();



     /*AQUI */
       var formAddCoordenadas = (function (window, undefined) {

           var init = function () {
               inscribeEventos();
           },
               inscribeEventos = function () {
                   $('#formRegCoordenada').on('show.bs.modal', function () {
                       // limpiaFormulario(this);
                   });
                   $('#CoordenadaNorteUTM').blur(function () {
                           var latmin = parseFloat($("input[id=Section6LatMin]").val());
                           var latmax = parseFloat($("input[id=Section6LatMax]").val());
                           var lat = parseFloat($('#CoordenadaNorteUTM').val());
                           validaRango($('#CoordenadaNorteUTM'), lat, latmin, latmax);

                   });
                   $('#CoordenadaEsteUTM').blur(function () {
                           var lonmin = parseFloat($("input[id=Section6LonMin]").val());
                           var lonmax = parseFloat($("input[id=Section6LonMax]").val());
                           var lon = parseFloat($('#CoordenadaEsteUTM').val());
                           validaRango($('#CoordenadaEsteUTM'), lon, lonmin, lonmax);
                   });
                   $('#grabaCoordenadas').click(function () {
                       insertFormCoordenadas();
                       return false;
                   });
               },
               validaFormCoord = function () {
                   var latmin = parseFloat($("input[id=Section6LatMin]").val());
                   var latmax = parseFloat($("input[id=Section6LatMax]").val());
                   var lat = parseFloat($('#CoordenadaNorteUTM').val());
                   var valor1 = validaRango($('#CoordenadaNorteUTM'), lat, latmin, latmax);

                   var lonmin = parseFloat($("input[id=Section6LonMin]").val());
                   var lonmax = parseFloat($("input[id=Section6LonMax]").val());
                   var lon = parseFloat($('#CoordenadaEsteUTM').val());
                   var valor2 = validaRango($('#CoordenadaEsteUTM'), lon, lonmin, lonmax);
                   return valor1 && valor2;
               },
               validaRango = function (objeto, valor, minimo, maximo) {
                   if (valor >= minimo && valor <= maximo) {
                       objeto.parent().removeClass("has-feedback has-error");
                       objeto.parent().find("span").html('');
                       objeto.parent().find("span").hide();
                       return true;
                   }
                   else {
                       objeto.parent().addClass("has-feedback has-error");
                       objeto.parent().find("span").html('Valor entre ' + minimo + ' y ' + maximo);
                       objeto.parent().find("span").show();
                       return false;
                   }
               },
               insertFormCoordenadas = function () {
                   if (validaFormCoord()) {
                var form = $("#formRegCoordenada").serialize();

                $.ajax({
                    async: true,
                    method: "POST",
                    url: '@Url.Action("InsertVertice", "Plantacion", new { area = "Plantaciones" })',
                    data: form,
                    cache: false,
                    success: function (result) {

                        if (result != null && result.success) {

                            $('#jumboCoor').remove();

                            showNotification(constantes.tipoAlerta.SUCCESS, "¡En hora Buena!", "Los datos del vértice se grabaron correctamente. ");

                            var htmldata = '<tr  id="coor-' + result.innerId + '"><td>' + $('#NumeroSecuencia').val() + '</td>' +
                                           '<td>' + $('#CoordenadaEsteUTM').val() + '</td>' +
                                           '<td>' + $('#CoordenadaNorteUTM').val() + '</td>' +
                                           '<td><button class="btn btn-danger btn-xs deleteLink" onClick="deleteRowCoordenada(' + result.innerId + ')" type="button"><i class="glyphicon glyphicon-trash"></i></button></td></tr>';

                            $('#detalleCoordenada').append(htmldata);

                            $badge = $('#badgeCoordenadaList');
                            count = Number($badge.text());
                            $badge.text(count + 1);
                            $('#NumeroSecuencia').val(count + 2);
                        }
                        else {
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!",
                                "Ocurrió un error al intentar registrar los datos del vértice. Por favor verifique la información ingresada y el siguiente mensaje: " + result.responseText);
                        }

                    },
                    error: function (ex) {
                        showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar registrar la revisión: " + ex);
                    }
                });

            }
            else {
                showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "11: Algunos de los campos ingresados no pudieron ser validados.");
            }
            return false;
               };
           return {
               init: init
           }
       })(window);
       formAddCoordenadas.init();


       let lista_coor = [];

    function modalCoordenadas(id,latmin,latmax,lonmin,lonmax) {
            $('#detalleCoordenada').empty();

            if (id > 0) {
                $.ajax({
                    method: "POST",
                    url: '@Url.Action("GetCoordenadas", "Plantacion", new { area = "Plantaciones"})',
                    data: { id: id },
                    cache: false,
                    success: function (data) {
                        lista_coor = data;
                        $("input[id=Section6Id]").val(id);
                        $("input[id=Section6LatMin]").val(latmin);
                        $("input[id=Section6LatMax]").val(latmax);
                        $("input[id=Section6LonMin]").val(lonmin);
                        $("input[id=Section6LonMax]").val(lonmax);
                        $('#modalCoordenadas').modal('show');
                        $('#NumeroSecuencia').val(data.length + 1);
                        $('#badgeCoordenadaList').text(data.length);

                        var htmldata = "";

                        if (data.length > 0) {


                            $.each(data, function (i, item) {

                                htmldata += '<tr  id="coor-' + item.Id + '"><td>' + item.NumeroSecuencia + '</td>' +
                                            '<td>' + item.CoordenadaEsteUTM + '</td>' +
                                            '<td>' + item.CoordenadaNorteUTM + '</td>' +
                                            '<td><button class="btn btn-danger btn-xs deleteLink" onClick="deleteRowCoordenada(' + item.Id + ')" type="button"><i class="glyphicon glyphicon-trash"></i></button></td></tr>';

                                $('#detalleCoordenada').html(htmldata);
                            });
                        }
                        else {
                            htmldata += '<tr id="jumboCoor"><td colspan="4"><div class="jumbotron">' +
                                   ' <p class="text-center"><small>No se encontraron vértices o coordenadas.</small></p>' +
                                   '</div></td> </tr>';

                            $('#detalleCoordenada').html(htmldata);

                        }
                    },
                    error: function (ex) {
                        showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar mostrar la información del bloque seleccionado." + ex);
                    }
                });
            }
            else {
                showNotification(constantes.tipoAlerta.INFO, "Sin coordenadas", "Para registrar y/o visualizar las coordenadas, primero debe cargar un Registro de predio o bloque.");
            }
       }

    function modalBloques(id) {
        //$('#modalDetallePlantacion').empty();

        if (id > 0) {

             $.ajax({
                    method: "POST",
                    url: '@Url.Action("GetBloque", "Plantacion", new { area = "Plantaciones"})',
                    data: {
                        id: id
                    },
                    dataType: 'json',
                    //cache: false,
                    success: function (data) {
                        console.log(data);
                        $('#modalDetallePlantacion').modal('show');
                        $("input[id=Section3IdBloque]").val(data.Id);
                        $("input[id=Section3Id]").val(data.Plantacion_Id);
                        $("input[id=NombreBloque]").val(data.Nombre);
                        $('#MesBloque').val(data.MesEstablecimiento);
                        $('#AnnioBloque').val(data.AnnioEstablecimiento);
                        $('#SistemaCoordenadas').val(data.SistemaCoordenada_Id);
                        $('#CoordenadaEsteBloque').val(data.CoordenadaEsteUTM);
                        $('#CoordenadaNorteBloque').val(data.CoordenadaNorteUTM);
                        $('#TipoPlantacion').val(data.SistemaPlantacion_Id);
                        $('#CantidadSuperficieHa').val(data.CantidadSuperficieHa);
                        $('#CantidadSuperficieMl').val(data.CantidadSuperficieMl);
                        $('#FinalidadProducto').val(data.Finalidad_Id);
                        $("input[id=Especie_Id]").val(data.Especie_Id);
                        $('#NombreComun').val(data.EspecieNombreComun);
                        $('#NombreCientifico').val(data.EspecieNombreCientifico);

                        $('#TipoPlantado').val(data.TipoPlantado);
                        $('#TotalPlantado').val(data.TotalPlantado);
                        $('#AlturaPromedio').val(data.AlturaPromedio);
                        $('#ProduccionEstimada').val(data.ProduccionEstimada);
                        $('#UnidadMedida').val(data.UnidadMedida_Id);
                    },
                    error: function (ex) {
                        console.log(ex);
                        showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar mostrar la información del bloque seleccionado." + ex);
                    }
                });


            }
            else {
                showNotification(constantes.tipoAlerta.INFO, "Error", "No se identifico el Bloque");
            }
       }

        function modalEspecie(id) {
        //$('#modalDetallePlantacion').empty();

            if (id > 0) {
                $.ajax({
                    method: "POST",
                    url: '@Url.Action("GetEspecie", "Plantacion", new { area = "Plantaciones"})',
                    data: { id: id },
                    cache: false,
                    success: function (data) {
                        $('#modalDetalleEspecies').modal('show');
                        $("input[id=Section8IdEspecie]").val(data.Id);
                        $("#BloqueAsig").val(data.PlantacionDetalle_Id);
                        $("input[id=Especie_Id]").val(data.Especie_Id);
                        $('#NombreComun').val(data.NombreComun);
                        $('#NombreCientifico').val(data.EspecieNombre);
                        $('#TipoPlantado').val(data.TipoPlantado);
                        $('#TotalPlantado').val(data.TotalPlantado);
                        $('#AlturaPromedio').val(data.AlturaPromedio);
                        $('#ProduccionEstimada').val(data.ProduccionEstimada);
                        $('#UnidadMedida').val(data.UnidadMedida_Id);
                    },
                    error: function (ex) {
                        showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar mostrar la información dela especie seleccionada." + ex);
                    }
                });
            }
            else {
                showNotification(constantes.tipoAlerta.INFO, "Error", "No se identifico la especie");
            }
       }

    function deleteCoordenadas() {
        $.each(lista_coor, function (i, item) {
            deleteRowCoordenada(item.Id);
        });
        return false;
    }
    function deleteRowCoordenada(id) {
            $.ajax({
                url: '@Url.Action("DeleteCoordenada", "Plantacion", new { area = "Plantaciones"})',
                method: "POST",
                data: { id: id },
                dataType: 'json',
                success: function (result) {
                    if (result) {

                        var tr = $('#coor-' + id);

                        //tr.css("background-color", "#FF3700");
                        tr.fadeOut(400, function () {
                            tr.remove();
                        });
                        $badge = $('#badgeCoordenadaList');
                        count = Number($badge.text());

                        if (count > 0) {
                            $('#NumeroSecuencia').val(count);
                        }

                        $badge.text(count - 1);

                    }
                    else {
                        showNotification(constantes.tipoAlerta.WARNING, "No se pudo eliminar el bloque/predio",
                            "Ocurrió un error al intentar eliminar a la persona seleccionada. Es problable que el registro esté asociado a una plantación o a un usuario del sistema.");
                    }
                },
                error: function (ex) {
                    showNotification(constantes.tipoAlerta.WARNING, "Algo salió mal!",
                           "Ocurrió un error del sistema. Pónganse en contacto con el administrador del sistema y comunique el siguiente mensaje: " + ex);
                }
            });

            return false;
        }
    /*AQUI*/


















        function uploadArchivoAnexo(anxid) {
            var fileUpload = $('#FileAnexo_' + anxid).get(0);
            var files = fileUpload.files;

            // Checking whether FormData is available in browser
            if (window.FormData !== undefined && files.length > 0) {

                // Create FormData object
                var fileData = new FormData();
                fileData.append(files[0].name, files[0]);

                var pltid = $("input[id=Section4Id]").val();

                $.ajax({
                    url: '/Plantacion/UploadAnexoFile?plantacionId=' + pltid + '&anexoId=' + anxid,
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData,
                    success: function (result) {

                        $badge = $('#badgeAnexosModal');
                        count = Number($badge.text());

                        $('#badgeAnexosTab').text(count + 1);
                        $('#badgeAnexosModal').text(count + 1);

                        //var htmldata = '<td class="text-center"><span class="glyphicon glyphicon-ban-circle"></span></td>' +
                        //                           '<td>' + desc + '</td>' +
                        //                           '<td class="text-center" colspan="2">' +
                        //                           '<input type="file"  class="form-control" id="FileAnexo_' + anxid + '" />' +
                        //                           '</td><td class="text-center" colspan="1">' +
                        //                           '<a href="#" class="btn btn-success" onclick="uploadArchivoAnexo(' + anxid + ')">' +
                        //                               '<span class="glyphicon glyphicon-upload"></span> Subir ' +
                        //                           '</a></td>';

                        //$('#anx-' + anxid).html(htmldata).fadeIn('slow');

                        showNotification(constantes.tipoAlerta.SUCCESS, "¡En hora Buena!", "El archivo se cargó exitosamente al sistema. ");
                    },
                    error: function (err) {
                        showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", err.statusText);
                    }
                });
            }
            else {
                showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "El navegador no permite carga de archivos HTML5, el elmento [FormData] no es soportado o no ha seleccionado un archivo válido.");
            }
        }
        function deleteDocumentoAnexo(id, uri, anxid, desc) {

            bootbox.confirm({
                message: "Se eliminará el documento anexo. Está seguro de continuar con la operación?",
                buttons: {
                    confirm: {
                        label: '<i class="glyphicon glyphicon-trash"></i>&nbsp;Eliminar',
                        className: 'btn-danger'
                    },
                    cancel: {
                        label: 'Cancelar',
                        className: 'btn-default'
                    }
                },
                callback: function (result) {

                    if (result) {
                        $.ajax({
                            url: '@Url.Action("DeleteDocumentoAnexo", "Plantacion", new { area = "Plantaciones"})',
                            method: "POST",
                            data: { id: id, ruta: uri },
                            dataType: 'json',
                            success: function (result) {
                                if (result) {

                                    $badge = $('#badgeAnexosModal');
                                    count = Number($badge.text());

                                    $('#badgeAnexosTab').text(count - 1);
                                    $('#badgeAnexosModal').text(count - 1);

                                    var htmldata = '<td class="text-center"><span class="glyphicon glyphicon-ban-circle"></span></td>' +
                                                    '<td>' + desc + '</td>' +
                                                    '<td class="text-center" colspan="2">' +
                                                    '<input type="file"  class="form-control" id="FileAnexo_' + anxid + '" />' +
                                                    '</td><td class="text-center" colspan="1">' +
                                                    '<a href="#" class="btn btn-success" onclick="uploadArchivoAnexo(' + anxid + ')">' +
                                                        '<span class="glyphicon glyphicon-upload"></span> Subir ' +
                                                    '</a></td>';

                                    $('#anx-' + anxid).html(htmldata).fadeIn('slow');

                                    showNotification(constantes.tipoAlerta.SUCCESS, "Se eliminó el archivo.",
                                     "El archivo seleccionado se eliminó correctamente.");

                                }
                                else {
                                    showNotification(constantes.tipoAlerta.WARNING, "No se pudo eliminar el archivo.",
                                        "La operación solicitada no pudo realizarse correctamente.");
                                }
                            },
                            error: function (ex) {
                                showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!",
                                       "Ocurrió un error al intentar conectar con el servicio. Contacte al administrador del sistema y comuníquele el siguiente mensaje:" + ex);

                            }
                        });
                    }
                }
            });

            return false;
        }


    </script>

    <!-- Scripts para mantenimiento y registro de archivo de las coordenadas -->
    <script type="text/javascript">

        function modalUploadCoordenadas(id,latmin, latmax, lonmin, lonmax) {
            if (id > 0) {
                $("input[id=Section7Id]").val(id);
                $("input[id=Section7LatMin]").val(latmin);
                $("input[id=Section7LatMax]").val(latmax);
                $("input[id=Section7LonMin]").val(lonmin);
                $("input[id=Section7LonMax]").val(lonmax);
                $('#modalUploadCoordenadas').modal('show');
            }
            else {
                showNotification(constantes.tipoAlerta.Warning, "Seleccione un Bloque", "No se ha podido identificar el registro del bloque seleccionado.");
            }
        }

        function deleteArchivoCoordenada(id, uri) {

            bootbox.confirm({
                message: "Se eliminará el documento de coordenadas cargado al sistema. Está seguro de continuar con la operación?",
                buttons: {
                    confirm: {
                        label: '<i class="glyphicon glyphicon-trash"></i>&nbsp;Eliminar',
                        className: 'btn-danger'
                    },
                    cancel: {
                        label: 'Cancelar',
                        className: 'btn-default'
                    }
                },
                callback: function (result) {

                    if (result) {
                        $.ajax({
                            url: '@Url.Action("DeleteArchivoCoordenada", "Plantacion", new { area = "Plantaciones"})',
                            method: "POST",
                            data: { id: id, ruta: uri },
                            dataType: 'json',
                            success: function (result) {
                                if (result) {

                                    showNotification(constantes.tipoAlerta.SUCCESS, "Archivo eliminado!.",
                                     "El archivo de coordenadas se eliminó correctamente.");

                                }
                                else {
                                    showNotification(constantes.tipoAlerta.WARNING, "No se pudo eliminar el archivo.",
                                        "La operación solicitada no pudo realizarse correctamente.");
                                }
                            },
                            error: function (ex) {
                                showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!",
                                       "Ocurrió un error al intentar conectar con el servicio. Contacte al administrador del sistema y comuníquele el siguiente mensaje:" + ex);

                            }
                        });
                    }
                }
            });

            return false;

        }

        function uploadArchivoCoordenadas() {
            var fileUpload = $("#FileUpload1").get(0);
            var files = fileUpload.files;

            // Checking whether FormData is available in browser
            if (window.FormData !== undefined && files.length > 0) {

                // Create FormData object
                var fileData = new FormData();
                fileData.append(files[0].name, files[0]);

                var id = $("input[id=Section7Id]").val();
                var latmin = $("input[id=Section7LatMin]").val();
                var latmax = $("input[id=Section7LatMax]").val();
                var lonmin = $("input[id=Section7LonMin]").val();
                var lonmax = $("input[id=Section7LonMax]").val();

                $.ajax({
                    url: '/Plantacion/UploadCoordinateFile?bloqueId=' + id + '&latmin=' + latmin + '&latmax=' + latmax + '&lonmin=' + lonmin + '&lonmax=' + lonmax,
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData,
                    success: function (result) {
                        $('#modalUploadCoordenadas').modal('hide');
                        if (result.success) {
                            showNotification(constantes.tipoAlerta.SUCCESS, "¡En hora Buena!", "El archivo se cargó exitosamente al sistema. ");
                        }
                        else {
                            showNotification(constantes.tipoAlerta.WARNING, "¡Datos incorrectos!", result.responseText);
                        }
                    },
                    error: function (err) {
                        showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", err.statusText);
                    }
                });
            }
            else {
                showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "El navegador no permite carga de archivos HTML5, el elmento [FormData] no es soportado o no ha seleccionado un archivo válido.");
            }
        }




    </script>

    <!-- Scripts de generación de registros históricos (Formato 03)  -->
    <script type="text/javascript">

        function insertRegHistorico(id) {
            bootbox.confirm({
                message: "Se procederá a registrar la información de la plantación como un histórico para permitirla editar según el Formato N° 03. Está seguro de continuar con la operación?",
                buttons: {
                    confirm: {
                        label: '<i class="glyphicon glyphicon-duplicate"></i>&nbsp;Confirmar',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'Cancelar',
                        className: 'btn-default'
                    }
                },
                callback: function (result) {

                    if (result) {
                        $.ajax({
                            url: '@Url.Action("InsertHistorico", "Plantacion", new { area = "Plantaciones"})',
                            method: "POST",
                            data: { id: id },
                            dataType: 'json',
                            success: function (result) {
                                if (result) {
                                    $('#headHistoricos').html('<h4 class="modal-title">Históricos del registro de plantación:</h4>');
                                    showNotification(constantes.tipoAlerta.SUCCESS, "¡En hora Buena!", "Se generó un registro histórico de actualización de la plantación. ");
                                    window.location.href = '/Plantacion/Edit?id=' + id;
                                }
                                else {
                                    showNotification(constantes.tipoAlerta.WARNING, "No se pudo registrar el histórico.",
                                        "La operación solicitada no pudo realizarse correctamente. Por favor, verifique el registro de plantación no haya sido modificado por otro usuario y se encuentre en proceso de aprobación.");
                                }
                            },
                            error: function (ex) {
                                showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!",
                                       "Ocurrió un error al intentar conectar con el servicio. Contacte al administrador del sistema y comuníquele el siguiente mensaje:" + ex);

                            }
                        });
                    }
                }
            });

            return false;
        }

        function modalHistoricos(id) {
            $('#bodyHistoricos').empty();

            if (id > 0) {
                $.ajax({
                    method: "POST",
                    url: '@Url.Action("_History", "Plantacion", new { area = "Plantaciones"})',
                    data: { plantacionId: id },
                    cache: false,
                    success: function (data) {
                        $('#modalHistoricos').modal('show');
                        $('#bodyHistoricos').html(data);
                    },
                    error: function (ex) {
                        showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar mostrar la información de la persona seleccionada." + ex);
                    }
                });
            }
            else {
                showNotification(constantes.tipoAlerta.INFO, "Sin revisiones", "Para registrar y/o visualizar las revisiones, primero debe cargar un Registro de plantación o iniciar uno nuevo.");
            }
        }
    </script>

    <!-- Scripts de registro observaciones y aprobaciones  -->
    <script type="text/javascript">

        function validaAntesRegistrar() {
            var dfd = jQuery.Deferred();


            let mensajes = [];
            //valida Fechas
            let dias = $.smkDateDiff({
                fromDate: $('#formRegSection1 #fechamesa').val(),
                toDate: $('#formRegSection1 #fechamesaAR').val(),
                interval: 'days'
            });
            if (dias < 0) {
                mensajes.push('Fecha de Solicitud es mayor a fecha de registro');
            }
            //valida Personas
            let roles = $('#personListBody h4');
            let numT = 0;
            let numP = 0;
            let numR = 0;
            for (let i = 0; i < roles.length; i++) {
                switch (roles[i].innerText.trim()) {
                    case "Titular": numT++;  break;
                    case "Propietario": numP++; break;
                    case 'Representante': numR++; break;
                }

            }
            if (numT < 1 || numP < 1) {
                mensajes.push('Debe registrar por lo menos un Titular y un Propietario');
            }

            //Valida Nombre del Predio
            if ($('#NombrePredio').val() == "") {
                mensajes.push('Debe registrar el Nombre del Predio');
            }
            if (Number($('#CantidadArea').val()) <= 0) {
                mensajes.push('Debe registrar un Area mayor a 0');
            }
            if ($('#NombrePredio').val() == "") {
                mensajes.push('Debe registrar el Nombre del Predio');
            }
            if (Number($('#DepartamentoPredio').val()) <= 0) {
                mensajes.push('Debe seleccionar un Departamento');
            }
            if (Number($('#ProvinciaPredio').val()) <= 0) {
                mensajes.push('Debe seleccionar una Provincia');
            }
            if (Number($('#DistritoPredio').val()) <= 0) {
                mensajes.push('Debe seleccionar un Distrito');
            }
            switch (Number($('#TipoZonaPredio').val())) {
                case 1:
                    if ($('#rbTerrestre[name="Condicion"]:checked').length == 0) {
                        mensajes.push('Debe seleccionar una Condición');
                    }
                    if ($('#DocumentoCondicion').val() == "") {
                        mensajes.push('Debe registrar el Tipo/Número de Documento que Acredita');
                    }
                    break;
                case 2:
                    if (Number($('#TipoComunidad').val()) <= 0) {
                        mensajes.push('Debe seleccionar un Tipo de Comunidad');
                    }
                    if ($('#rbTerrestre[name="Condicion"]:checked').length == 0) {
                        mensajes.push('Debe seleccionar una Condición');
                    }
                    if ($('#DocumentoCondicion').val() == "") {
                        mensajes.push('Debe registrar el Tipo/Número de Documento que Acredita');
                    }
                    break;
                case 3:
                    break;
                case 4:
                    if (Number($('#TipoAutorizacion').val()) <= 0) {
                        mensajes.push('Debe seleccionar un Tipo de Contrato de T.H.');
                    }
                    if ($('#DocumentoContrato').val() == "") {
                        mensajes.push('Debe registrar el Número de Contrato de T.H.');
                    }
                    break;
                default:
                    mensajes.push('Debe seleccionar un Tipo de Zona');
            }
            if ($('#NombreZonaPredio').val() == "") {
                mensajes.push('Debe registrar el Nombre del Caserio o Comunidad');
            }
            if (Number($('#SistemaCoordenadasPredio').val()) <= 0) {
                mensajes.push('Debe seleccionar un Sistema de Coordenadas');
            }
            else {
                let latmin = parseFloat($('#SistemaCoordenadasPredio').find(":selected").attr('data-latitudmin'));
                let latmax = parseFloat($('#SistemaCoordenadasPredio').find(":selected").attr('data-latitudmax'));
                let lat = parseFloat($('#CoordenadaNortePredio').val());
                if (lat < latmin || lat > latmax) {
                    mensajes.push('Debe registrar una coordenada UTM - Este valida');
                }

                let lonmin = parseFloat($('#SistemaCoordenadasPredio').find(":selected").attr('data-longitudmin'));
                let lonmax = parseFloat($('#SistemaCoordenadasPredio').find(":selected").attr('data-longitudmax'));
                let lon = parseInt($('#CoordenadaEstePredio').val());
                if (lon < lonmin || lon > lonmax) {
                    mensajes.push('Debe registrar una coordenada UTM - Norte valida');
                }
            }
            let bloques = $('#detalleListBody h5');
            if (bloques.length == 0) {
                mensajes.push('Debe registrar por menos un bloque');
            }
            let especies = $('#especieListBody h5');
            if (especies.length == 0) {
                mensajes.push('Debe registrar por menos una especie');
            }
            else
            {
                let arrBloque = [];
                $.each(bloques, function (index, bloque) {
                    arrBloque.push(bloque.innerText);
                });

                let arrEspecie = [];
                $.each(especies, function (index, especie) {
                    arrEspecie.push(especie.innerText);
                });
                let bloquesunicos = jQuery.uniqueSort(arrBloque);
                let especiesunicos = jQuery.uniqueSort(arrEspecie);
                if (bloquesunicos.length == especiesunicos.length) {
                    for (let i = 0; i < bloquesunicos.length; i++) {
                        if (bloquesunicos[i] != especiesunicos[i]) {
                            mensajes.push('Debe registrar al menos una especie por bloque');
                        }
                    }
                }
                else {
                    mensajes.push('Debe registrar al menos una especie por bloque');
                }
                console.log(bloques);
                console.log(bloquesunicos);
                console.log(especiesunicos);
            }
            if ($('#anx-1 a').length < 3) {
                mensajes.push('Debe cargar el anexo 1');
            }
            if (numR > 0) {
                if ($('#anx-2 a').length < 3) {
                    mensajes.push('Debe cargar el anexo 2');
                }
            }
            if ($('#TipoZonaPredio').val() == 1) {
                if ($('#anx-3 a').length < 3) {
                    mensajes.push('Debe cargar el anexo 3');
                }
            }
            if ($('#anx-4 a').length < 3) {
                mensajes.push('Debe cargar el anexo 4');
            }
            if ($('#TipoZonaPredio').val() == 4) {
                if ($('#anx-5 a').length < 3) {
                    mensajes.push('Debe cargar el anexo 5');
                }
            }
            if (numT > 0 && numP > 0) {
                let personas = $('#personListBody a');
                let titular = "";
                let propietario = "";
                for (let i = 0; i < roles.length; i++) {
                    switch (roles[i].innerText) {
                        case 'Titular': titular = personas[i].innerText; break;
                        case 'Propietario': propietario = personas[i].innerText; break;
                    }
                }
                if (titular !== propietario && $('#TipoZonaPredio').val() == 1) {
                    if ($('#anx-6 a').length < 3) {
                        mensajes.push('Debe cargar el anexo 6');
                    }
                }
            }
            if ($('#TipoZonaPredio').val() == 2) {
                if ($('#anx-7 a').length < 3) {
                    mensajes.push('Debe cargar el anexo 7');
                }
            }
            if ($('#ObservacionRevision').val() == "") {
                mensajes.push('Debe registrar alguna observación');
            }
            dfd.resolve(mensajes);

            return dfd.promise();
        }


        function updateObjectId(plantacionId, objectId) {
            var formData = new FormData();
            formData.append("plantacionId", plantacionId);
            formData.append("objectId", objectId);
              $.ajax({
                               async: true,
                               method: "POST",
                               url: '@Url.Action("UpdateObjectId", "Plantacion", new { area = "Plantaciones" })',
                               data: formData,
                               cache: false,
                               contentType: false, // Not to set any content header
                               processData: false, // Not to process data
                               success: function (data) {
                                   console.log("Actualizacion con exito");
                               },
                               error: function (ex) {
                                   showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar actualizar." + ex);
                               }
                           });
        }
    @*TYLER 12.12.19 - INICIO*@
    function addFeatureServer(plantacionId) {

        $.ajax({
                method:"GET",
                url:'@Url.Action("GetInfoPlantacion", "Plantacion")?plantacionId=' + plantacionId,

            success: function (response) {
                var ruta = 'https://geo.serfor.gob.pe/geoservicios/rest/services/Sniffs/Registro_Plantaciones/FeatureServer/1/addFeatures'
                if (response != undefined && response[0].attributes!= undefined
                    && response[0].attributes.ObjectId != null && response[0].attributes.ObjectId != "") {
                    response[0].attributes.ObjectId = parseInt(response[0].attributes.ObjectId);
                    ruta = 'https://geo.serfor.gob.pe/geoservicios/rest/services/Sniffs/Registro_Plantaciones/FeatureServer/1/updateFeatures';
                }

                var dataFeature = new FormData();
                dataFeature.append("features", JSON.stringify(response));
                dataFeature.append("f", "pjson");
             

                $.ajax({
                    method:"POST", 
                    url: ruta,
                    data: dataFeature,
                    dataType: 'json',
                      processData: false,
                     contentType: false,
                    success: function (rpta) {
               
                        if (rpta.addResults != undefined
                            && rpta.addResults[0].success) {

                            updateObjectId(plantacionId, rpta.addResults[0].objectId);
                            console.log("Se traslado la inforamcion correctamente");
                        }


                },
                    error: function (error) {
                      
                     console.log("Error addFeatureServer", error);
                  }
                });


            },
            error: function (error) {
                console.log("Error  validate addFeatureServer", error);
            }
        });
    }
    @*TYLER 12.12.19 - FIN*@

        function insertFormRevision(esaprobado) {

            var plantacionId = @Model.Id;
            if (!plantacionId) { plantacionId = $("input[id=Section3Id]").val(); }
            

               $.ajax({
                method:"GET",
                url:'@Url.Action("GetStatusGeo", "Plantacion")?plantacionId=' + plantacionId,

                success: function (response) {

                    var estadoGeo = response == "OK"

            
                        $.when(validaAntesRegistrar()).then(
                        (rspta) => {
                            if (rspta.length == 0) {
                                var formRev = $("#formRegRevision").serialize();
                                $('#revObservar').addClass('disabled');
                                $('#revAprobar').addClass('disabled');

                                if (!esaprobado || estadoGeo) {
                                    $.ajax({
                                        async: true,
                                        method: "POST",
                                        url: '@Url.Action("_ItemRevision", "Plantacion", new { area = "Plantaciones" })',
                                        data: { plantacionId: $('input#Section5Id').val(), aprobado: esaprobado, observacion: $('#ObservacionRevision').val() },
                                        cache: false,
                                        success: function (data) {
                                            $('#bodyRevisiones').append(data);
                                            $('#jumbotronRevisiones').hide();
                                            if (esaprobado) {
                                                addFeatureServer(plantacionId); @*TYLER 12.12.19*@
                                                $('#headRevisiones').html('<h4 class="modal-title">Realizó la aprobación del registro correctamente!.</h4>');
                                                //GRABAR Poligono
                                            }
                                        },
                                        error: function (ex) {
                                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar registrar la revisión: " + ex);
                                        }
                                    });


                                }
                                else {
                                    var mensaje = "Verificar bloques de platancion";
                                    $('#revObservar').removeClass('disabled');

                                    showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", mensaje);
                                }
                                
                            }
                            else {
                                showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", rspta.join('<br/>'));
                            }
                        }).catch(
                            (err) => { console.log(err) }
                        );
                },

                error: function (error) {

                }
            });

        
        }

        function modalRevisiones(id) {
            $('#bodyRevisiones').empty();

            if (id > 0) {
                $.ajax({
                    method: "POST",
                    url: '@Url.Action("_Revisions", "Plantacion", new { area = "Plantaciones"})',
                    data: { plantacionId: id },
                    cache: false,
                    success: function (data) {
                        $('#revObservar').removeClass('disabled');
                        $('#revAprobar').removeClass('disabled');
                        $('#modalRevision').modal('show');
                        $('#bodyRevisiones').html(data);
                    },
                    error: function (ex) {
                        showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar mostrar la información de la persona seleccionada." + ex);
                    }
                });
            }
            else {
                showNotification(constantes.tipoAlerta.INFO, "Sin revisiones", "Para registrar y/o visualizar las revisiones, primero debe cargar un Registro de plantación o iniciar uno nuevo.");
            }
        }

    </script>

    <!-- Scripts de mantenimiento de los detalles del predio (Tab3)  -->
    <script type="text/javascript">

        function insertFormSectionThree() {
            $badge = $('#badgeDetallesList')

            if (Number($badge.text()) > 0) {
            /*enable next tab*/
                //Validacion de Lista coordenadas

                var plantacionId = @Model.Id;
                if (!plantacionId) { plantacionId = $("input[id=Section3Id]").val(); }


                var plantacionEstado = null;
                $.ajax({

                    method: "GET",
                    url: '@Url.Action("GetStatusGeo", "Plantacion")?plantacionId=' + plantacionId,
                    success: function (result) {

                        console.log(result);
                        var estadoValido = result == "OK"

                        if (estadoValido) {

                            let codigoListaCordenadas = $("#codigoListaCordenadas").val();
                            $.ajax({
                                method: "POST",
                                url: '@Url.Action("GetCoordenadas", "Plantacion", new { area = "Plantaciones"})',
                                data: { id: codigoListaCordenadas },
                                cache: false,
                                success: function (data) {
                                    if (data.length > 0) {
                                        $('.nav #li4').removeClass('disabled');
                                        $('.nav #li4').find('a').attr("data-toggle", "tab")
                                        $('.nav-tabs > .active').next('li').find('a').trigger('click');
                                    } else {
                                        showNotification(constantes.tipoAlerta.INFO, "Registro de bloques/predios", "Debe registrar las coordenadas segun el formato N° 1.");
                                    }
                                },
                                error: function (ex) {
                                    showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Al momento de continuar" + ex);
                                }
                            });

                        } else {

                            var mensaje = result === "FAIL" ? "Verificar los bloques de la Plantación" : "Para Continuar primero debe validar los bloques de la plantación"
                            showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", mensaje);
                        }
                    }
                });

            } else {
                showNotification(constantes.tipoAlerta.INFO, "Registro de bloques/predios", "Debe registrar por lo menos un bloque.");
            }
        }

        function insertFormSectionFour() {
            $badge = $('#badgeEspeciesList')

            if (Number($badge.text()) > 0) {
                /*enable next tab*/
                $('.nav #li5').removeClass('disabled');
                $('.nav #li5').find('a').attr("data-toggle", "tab")
                $('.nav-tabs > .active').next('li').find('a').trigger('click');

            } else {
                showNotification(constantes.tipoAlerta.INFO, "Registro de bloques/predios", "Debe registrar por lo menos un bloque o predio para poder continuar con la carga de anexos.");
            }
        }


        function deleteRowDetalle(id) {
            $.ajax({
                url: '@Url.Action("DeleteBloque", "Plantacion", new { area = "Plantaciones"})',
                method: "POST",
                data: { id: id },
                dataType: 'json',
                success: function (result) {
                    if (result) {

                        var tr = $('#rowB-' + id);

                        //tr.css("background-color", "#FF3700");
                        tr.fadeOut(400, function () {
                            tr.remove();
                        });
                        $badge = $('#badgeDetallesTab');
                        $badge2 = $('#badgeDetallesList');
                        count = Number($badge.text());
                        $badge.text(count - 1);
                        $badge2.text(count - 1);
                        formDetEspecie.getBloques();

                    }
                    else {
                        showNotification(constantes.tipoAlerta.WARNING, "No se pudo eliminar el bloque/predio",
                            "Ocurrió un error al intentar eliminar a la persona seleccionada. Es problable que el registro esté asociado a una plantación o a un usuario del sistema.");
                    }
                },
                error: function (ex) {
                    showNotification(constantes.tipoAlerta.WARNING, "Algo salió mal!",
                           "Ocurrió un error del sistema. Pónganse en contacto con el administrador del sistema y comunique el siguiente mensaje: " + ex);
                }
            });

            return false;
        }
        function deleteRowEspecie(id) {
            $.ajax({
                url: '@Url.Action("DeleteEspecie", "Plantacion", new { area = "Plantaciones"})',
                method: "POST",
                data: { id: id },
                dataType: 'json',
                success: function (result) {
                    if (result) {

                        var tr = $('#rowB-' + id);

                        //tr.css("background-color", "#FF3700");
                        tr.fadeOut(400, function () {
                            tr.remove();
                        });
                        $badge = $('#badgeEspeciesTab');
                        $badge2 = $('#badgeEspeciesList');
                        count = Number($badge.text());
                        $badge.text(count - 1);
                        $badge2.text(count - 1);

                    }
                    else {
                        showNotification(constantes.tipoAlerta.WARNING, "No se pudo eliminar el bloque/predio",
                            "Ocurrió un error al intentar eliminar a la especie seleccionada. Es problable que el registro esté asociado a una plantación o a un usuario del sistema.");
                    }
                },
                error: function (ex) {
                    showNotification(constantes.tipoAlerta.WARNING, "Algo salió mal!",
                           "Ocurrió un error del sistema. Pónganse en contacto con el administrador del sistema y comunique el siguiente mensaje: " + ex);
                }
            });

            return false;
        }


    </script>

    <!-- Scripts de registro de los datos del predio (Tab2) -->
    <script type="text/javascript">





    </script>

    <!-- Scripts de registro de fechas (Tab1)  -->
    <script type="text/javascript">

        function insertFormSectionOne() {

            $badge = $('#badgePersona')

            if (Number($badge.text()) > 0) {
                var result = registerFormSectionOne_Continuar();
                if (result > 0) {
                    /*enable next tab*/
                    //$('.nav #li4').removeClass('disabled');
                    //$('.nav #li4').find('a').attr("data-toggle", "tab")
                    $('.nav #li2').removeClass('disabled');
                    $('.nav #li2').find('a').attr("data-toggle", "tab")
                    $('.nav-tabs > .active').next('li').find('a').trigger('click');
                }

            } else {
                showNotification(constantes.tipoAlerta.INFO, "Registro de personas", "Debe registrar mínimo a un titular o a un propietario");
            }

        }

        function registerFormSectionOne() {
            var idPlt = 0;
            if ($('#formRegSection1').smkValidate()) {
                var dias = $.smkDateDiff({
                    fromDate: $('#formRegSection1 #fechamesa').val(),
                    toDate: $('#formRegSection1 #fechamesaAR').val(),
                    interval: 'days'
                });
                    if (dias < 0) {
                        showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "La fecha de Recepción debe ser mayor o igual a la fecha de Solicitud");
                    }
                    else {
                        var form = $("#formRegSection1").serialize();

                        $.ajax({
                            async: false,
                            type: 'POST',
                            url: '@Url.Action("RegisterSectionOne", "Plantacion", new { area = "Plantaciones"})',
                            data: form,
                            dataType: 'json',
                            success: function (result) {
                                if (result != null && result.success) {

                                    idPlt = result.innerId;
                                    $("input[id=Section1Id]").val(idPlt);
                                    $("input[id=Section2Id]").val(idPlt);
                                    $("input[id=Section3Id]").val(idPlt);
                                    $("input[id=Section4Id]").val(idPlt);
                                    $("input[id=Section5Id]").val(idPlt);
                                    showNotification(constantes.tipoAlerta.SUCCESS, "¡En hora Buena!", "El registro inicial de la plantación se realizó correctamente.");

                                }
                                else {
                                    showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!",
                                        "Ocurrió un error al intentar registrar los datos de la persona. Por favor verifique la información ingresada y el siguiente mensaje: " + result.responseText);
                                }
                            },
                            error: function (ex) {
                                showNotification(constantes.tipoAlerta.DANGER, "¡Error del sistema!",
                                    "No se pudo conectar con el servicio solicitado: " + ex);
                            }
                        });
                    }
            }
            else {
                showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "12: Algunos de los campos ingresados no pudieron ser validados.");
            }

            return idPlt;
        }
        function registerFormSectionOne_Continuar() {
            var idPlt = 0;
            if ($('#formRegSection1').smkValidate()) {
                var dias = $.smkDateDiff({
                    fromDate: $('#formRegSection1 #fechamesa').val(),
                    toDate: $('#formRegSection1 #fechamesaAR').val(),
                    interval: 'days'
                });

                var lista = $('#personListBody h4');
                let numT = 0;
                let numP = 0;
                for (let i = 0; i < lista.length; i++) {
                    switch (lista[i].innerText) {
                        case 'Titular': numT++; break;
                        case 'Propietario': numP++; break;
                    }
                }
                if (numT > 0 && numP > 0) {
                    if (dias < 0) {
                        showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "La fecha de Recepción debe ser mayor o igual a la fecha de Solicitud");
                    }
                    else {
                        var form = $("#formRegSection1").serialize();

                        $.ajax({
                            async: false,
                            type: 'POST',
                            url: '@Url.Action("RegisterSectionOne", "Plantacion", new { area = "Plantaciones"})',
                            data: form,
                            dataType: 'json',
                            success: function (result) {
                                if (result != null && result.success) {

                                    idPlt = result.innerId;
                                    $("input[id=Section1Id]").val(idPlt);
                                    $("input[id=Section2Id]").val(idPlt);
                                    $("input[id=Section3Id]").val(idPlt);
                                    $("input[id=Section4Id]").val(idPlt);
                                    $("input[id=Section5Id]").val(idPlt);
                                    showNotification(constantes.tipoAlerta.SUCCESS, "¡En hora Buena!", "El registro inicial de la plantación se realizó correctamente.");

                                }
                                else {
                                    showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!",
                                        "Ocurrió un error al intentar registrar los datos de la persona. Por favor verifique la información ingresada y el siguiente mensaje: " + result.responseText);
                                }
                            },
                            error: function (ex) {
                                showNotification(constantes.tipoAlerta.DANGER, "¡Error del sistema!",
                                    "No se pudo conectar con el servicio solicitado: " + ex);
                            }
                        });
                    }
                }
                else {
                    showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "Debe ingresar al menos un titular y un propietario");
                }
            }
            else {
                showNotification(constantes.tipoAlerta.WARNING, "Validación de datos", "13: Algunos de los campos ingresados no pudieron ser validados.");
            }

            return idPlt;
        }

    </script>

    <!-- Scripts de búsqueda y mantenimiento de personas (Tab1)  -->
    <script type="text/javascript">

        function loadItemRowPersona(id) {

            var resultId = registerFormSectionOne();

            if (resultId > 0) {

                $.ajax({
                    async: false,
                    method: "GET",
                    url: '@Url.Action("_RolPersona", "Plantacion", new { area = "Plantaciones" })',
                    data: { id: id, idplt: resultId, rol: $("input[name='rol']:checked").val() },
                    cache: false,
                    success: function (data) {
                        $('#personListBody').append(data);

                        $badge = $('#badgePersona');
                        count = Number($badge.text());
                        $badge.text(count + 1);

                    },
                    error: function (ex) {
                        showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar cargar la información de la persona." + ex);
                    }
                });
            }
            else { showNotification(constantes.tipoAlerta.WARNING, "Registro inicial o validación", "No se pudo generar el registro inicial de la plantación o no se validaron los campos correctamente."); }

        }

        function deleteRowPersona(id) {
            $.ajax({
                url: '@Url.Action("DeletePersona", "Plantacion", new { area = "Plantaciones"})',
                method: "POST",
                data: { id: id },
                dataType: 'json',
                success: function (result) {
                    if (result) {

                        var tr = $('#row-' + id);

                        //tr.css("background-color", "#FF3700");
                        tr.fadeOut(400, function () {
                            tr.remove();
                        });

                        $badge = $('#badgePersona');
                        count = Number($badge.text());
                        $badge.text(count - 1);

                    }
                    else {
                        showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!",
                            "Ocurrió un error al intentar eliminar a la persona seleccionada. Es problable que el registro esté asociado a una plantación o a un usuario del sistema.");
                    }
                },
                error: function () {

                }
            });

            return false;
        }

        function modalDetalles(id) {
            $('#bodyDetails').empty();

            $.ajax({
                async: true,
                method: "GET",
                url: '@Url.Action("_DetailsPopUp", "Persona", new { area = "General" })',
                data: { id: id },
                cache: false,
                success: function (data) {
                    $('#modalDetallesPersona').modal('show');
                    $('#bodyDetails').html(data);
                },
                error: function (ex) {
                    showNotification(constantes.tipoAlerta.DANGER, "¡Algo salió mal!", "Ocurrió un error al intentar mostrar la información de la persona seleccionada." + ex);
                }
            });
        }





        $(function () {

            $("#searchPersona").typeahead({
                minLength: 4,
                delay: 500,
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("Search", "Persona",new { area="General"})',
                        data: "{ 'texto': '" + request + "','idPlt': '" + $("input[id=Section1Id]").val() +"'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            items = [];
                            map = {};
                            $.each(data, function (i, item) {
                                var id = item.Id;
                                var name = item.NombreCompleto + ' - ' + item.Documento;
                                map[name] = { id: id, name: name };
                                items.push(name);
                            });
                            response(items);
                            $(".dropdown-menu").css("height", "auto");
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                updater: function (item) {
                    $("#searchPersona").val("");
                    $("#searchPersona").focus();
                    loadItemRowPersona(map[item].id);
                    return item;
                }
            });

        });

    </script>

    <!-- Scripts de inicio  -->
    <script type="text/javascript">

        $(function () {

            if (Number($('input#Section1Id').val()) == 0) {
                /*disable non active tabs*/
                $('.nav-sections li').not('.active').addClass('disabled');
                /*to actually disable clicking the bootstrap tab, as noticed in comments by user3067524*/
                $('.nav-sections li').not('.active').find('a').removeAttr("data-toggle");
            }
            else {
                /*TODO: program the logic to validate Model.NivelAvance*/
            }

            $('.btnPrevious').click(function () {
                $('.nav-tabs > .active').prev('li').find('a').trigger('click');
            });

            $('.btnNext').click(function () {
                $('.nav-tabs > .active').next('li').find('a').trigger('click');
            });
            $("input[name='rol']").change(function (valor) {
                //searchPersona
                $("#searchPersona").val("");
            });













        });
    </script>

    <script>
        $("#numeroPredio").blur(function () {

            var input_numero_predio = $("#numeroPredio");
            var btn_grabar2 = $("#grabar2");
            var numeroPredio = input_numero_predio.val();
            var isValid = validarPredio(numeroPredio);

            if (!isValid){

                input_numero_predio.removeClass('success');
                input_numero_predio.addClass('error help-inline');
                btn_grabar2.attr('disabled', true);
            }

            else {
                input_numero_predio.removeClass('error help-inline');
                input_numero_predio.addClass('success');
                btn_grabar2.attr('disabled', false);
            }
   
        });


        $("#validarMapa").click(function () {

            var plantacionId = @Model.Id;

            if (!plantacionId) plantacionId =  $("input[id=Section3Id]").val()

            url = "@Url.Action("ArcMapCoordenadasPlantacion", "Maps", new {area="Plantaciones"})?plantacionId=" + plantacionId;
            window.open(url, '_blank');
            return false

        });

    </script>



}
